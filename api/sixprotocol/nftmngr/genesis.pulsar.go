// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package nftmngr

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_GenesisState_2_list)(nil)

type _GenesisState_2_list struct {
	list *[]*NFTSchema
}

func (x *_GenesisState_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NFTSchema)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NFTSchema)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_2_list) AppendMutable() protoreflect.Value {
	v := new(NFTSchema)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_2_list) NewElement() protoreflect.Value {
	v := new(NFTSchema)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_3_list)(nil)

type _GenesisState_3_list struct {
	list *[]*NftData
}

func (x *_GenesisState_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NftData)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NftData)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_3_list) AppendMutable() protoreflect.Value {
	v := new(NftData)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_3_list) NewElement() protoreflect.Value {
	v := new(NftData)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_4_list)(nil)

type _GenesisState_4_list struct {
	list *[]*ActionByRefId
}

func (x *_GenesisState_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionByRefId)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionByRefId)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_4_list) AppendMutable() protoreflect.Value {
	v := new(ActionByRefId)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_4_list) NewElement() protoreflect.Value {
	v := new(ActionByRefId)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_5_list)(nil)

type _GenesisState_5_list struct {
	list *[]*Organization
}

func (x *_GenesisState_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Organization)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Organization)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_5_list) AppendMutable() protoreflect.Value {
	v := new(Organization)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_5_list) NewElement() protoreflect.Value {
	v := new(Organization)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_7_list)(nil)

type _GenesisState_7_list struct {
	list *[]*NFTSchemaByContract
}

func (x *_GenesisState_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NFTSchemaByContract)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NFTSchemaByContract)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_7_list) AppendMutable() protoreflect.Value {
	v := new(NFTSchemaByContract)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_7_list) NewElement() protoreflect.Value {
	v := new(NFTSchemaByContract)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_10_list)(nil)

type _GenesisState_10_list struct {
	list *[]*MetadataCreator
}

func (x *_GenesisState_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MetadataCreator)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MetadataCreator)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_10_list) AppendMutable() protoreflect.Value {
	v := new(MetadataCreator)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_10_list) NewElement() protoreflect.Value {
	v := new(MetadataCreator)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_11_list)(nil)

type _GenesisState_11_list struct {
	list *[]*NftCollection
}

func (x *_GenesisState_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NftCollection)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NftCollection)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_11_list) AppendMutable() protoreflect.Value {
	v := new(NftCollection)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_11_list) NewElement() protoreflect.Value {
	v := new(NftCollection)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_12_list)(nil)

type _GenesisState_12_list struct {
	list *[]*ActionExecutor
}

func (x *_GenesisState_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionExecutor)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionExecutor)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_12_list) AppendMutable() protoreflect.Value {
	v := new(ActionExecutor)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_12_list) NewElement() protoreflect.Value {
	v := new(ActionExecutor)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_13_list)(nil)

type _GenesisState_13_list struct {
	list *[]*SchemaAttribute
}

func (x *_GenesisState_13_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_13_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_13_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SchemaAttribute)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_13_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SchemaAttribute)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_13_list) AppendMutable() protoreflect.Value {
	v := new(SchemaAttribute)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_13_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_13_list) NewElement() protoreflect.Value {
	v := new(SchemaAttribute)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_13_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_14_list)(nil)

type _GenesisState_14_list struct {
	list *[]*ActionOfSchema
}

func (x *_GenesisState_14_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_14_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_14_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionOfSchema)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_14_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionOfSchema)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_14_list) AppendMutable() protoreflect.Value {
	v := new(ActionOfSchema)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_14_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_14_list) NewElement() protoreflect.Value {
	v := new(ActionOfSchema)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_14_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_15_list)(nil)

type _GenesisState_15_list struct {
	list *[]*ExecutorOfSchema
}

func (x *_GenesisState_15_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_15_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_15_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ExecutorOfSchema)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_15_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ExecutorOfSchema)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_15_list) AppendMutable() protoreflect.Value {
	v := new(ExecutorOfSchema)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_15_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_15_list) NewElement() protoreflect.Value {
	v := new(ExecutorOfSchema)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_15_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_16_list)(nil)

type _GenesisState_16_list struct {
	list *[]*VirtualAction
}

func (x *_GenesisState_16_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_16_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_16_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualAction)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_16_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualAction)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_16_list) AppendMutable() protoreflect.Value {
	v := new(VirtualAction)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_16_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_16_list) NewElement() protoreflect.Value {
	v := new(VirtualAction)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_16_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_17_list)(nil)

type _GenesisState_17_list struct {
	list *[]*VirtualSchema
}

func (x *_GenesisState_17_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_17_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_17_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualSchema)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_17_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualSchema)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_17_list) AppendMutable() protoreflect.Value {
	v := new(VirtualSchema)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_17_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_17_list) NewElement() protoreflect.Value {
	v := new(VirtualSchema)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_17_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_19_list)(nil)

type _GenesisState_19_list struct {
	list *[]*VirtualSchemaProposal
}

func (x *_GenesisState_19_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_19_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_19_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualSchemaProposal)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_19_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualSchemaProposal)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_19_list) AppendMutable() protoreflect.Value {
	v := new(VirtualSchemaProposal)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_19_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_19_list) NewElement() protoreflect.Value {
	v := new(VirtualSchemaProposal)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_19_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_20_list)(nil)

type _GenesisState_20_list struct {
	list *[]*ActiveVirtualSchemaProposal
}

func (x *_GenesisState_20_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_20_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_20_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActiveVirtualSchemaProposal)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_20_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActiveVirtualSchemaProposal)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_20_list) AppendMutable() protoreflect.Value {
	v := new(ActiveVirtualSchemaProposal)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_20_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_20_list) NewElement() protoreflect.Value {
	v := new(ActiveVirtualSchemaProposal)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_20_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_21_list)(nil)

type _GenesisState_21_list struct {
	list *[]*InactiveVirtualSchemaProposal
}

func (x *_GenesisState_21_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_21_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_21_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*InactiveVirtualSchemaProposal)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_21_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*InactiveVirtualSchemaProposal)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_21_list) AppendMutable() protoreflect.Value {
	v := new(InactiveVirtualSchemaProposal)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_21_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_21_list) NewElement() protoreflect.Value {
	v := new(InactiveVirtualSchemaProposal)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_21_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_22_list)(nil)

type _GenesisState_22_list struct {
	list *[]*LockSchemaFee
}

func (x *_GenesisState_22_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_22_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_22_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*LockSchemaFee)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_22_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*LockSchemaFee)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_22_list) AppendMutable() protoreflect.Value {
	v := new(LockSchemaFee)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_22_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_22_list) NewElement() protoreflect.Value {
	v := new(LockSchemaFee)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_22_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GenesisState                                   protoreflect.MessageDescriptor
	fd_GenesisState_params                            protoreflect.FieldDescriptor
	fd_GenesisState_nFTSchemaList                     protoreflect.FieldDescriptor
	fd_GenesisState_nftDataList                       protoreflect.FieldDescriptor
	fd_GenesisState_actionByRefIdList                 protoreflect.FieldDescriptor
	fd_GenesisState_organizationList                  protoreflect.FieldDescriptor
	fd_GenesisState_nFTSchemaByContractList           protoreflect.FieldDescriptor
	fd_GenesisState_nft_fee_config                    protoreflect.FieldDescriptor
	fd_GenesisState_nFTFeeBalance                     protoreflect.FieldDescriptor
	fd_GenesisState_metadataCreatorList               protoreflect.FieldDescriptor
	fd_GenesisState_nftCollectionList                 protoreflect.FieldDescriptor
	fd_GenesisState_actionExecutorList                protoreflect.FieldDescriptor
	fd_GenesisState_schemaAttributeList               protoreflect.FieldDescriptor
	fd_GenesisState_actionOfSchemaList                protoreflect.FieldDescriptor
	fd_GenesisState_executorOfSchemaList              protoreflect.FieldDescriptor
	fd_GenesisState_virtualActionList                 protoreflect.FieldDescriptor
	fd_GenesisState_virtualSchemaList                 protoreflect.FieldDescriptor
	fd_GenesisState_virtualSchemaProposalList         protoreflect.FieldDescriptor
	fd_GenesisState_activeVirtualSchemaProposalList   protoreflect.FieldDescriptor
	fd_GenesisState_inactiveVirtualSchemaProposalList protoreflect.FieldDescriptor
	fd_GenesisState_lockSchemaFeeList                 protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftmngr_genesis_proto_init()
	md_GenesisState = File_sixprotocol_nftmngr_genesis_proto.Messages().ByName("GenesisState")
	fd_GenesisState_params = md_GenesisState.Fields().ByName("params")
	fd_GenesisState_nFTSchemaList = md_GenesisState.Fields().ByName("nFTSchemaList")
	fd_GenesisState_nftDataList = md_GenesisState.Fields().ByName("nftDataList")
	fd_GenesisState_actionByRefIdList = md_GenesisState.Fields().ByName("actionByRefIdList")
	fd_GenesisState_organizationList = md_GenesisState.Fields().ByName("organizationList")
	fd_GenesisState_nFTSchemaByContractList = md_GenesisState.Fields().ByName("nFTSchemaByContractList")
	fd_GenesisState_nft_fee_config = md_GenesisState.Fields().ByName("nft_fee_config")
	fd_GenesisState_nFTFeeBalance = md_GenesisState.Fields().ByName("nFTFeeBalance")
	fd_GenesisState_metadataCreatorList = md_GenesisState.Fields().ByName("metadataCreatorList")
	fd_GenesisState_nftCollectionList = md_GenesisState.Fields().ByName("nftCollectionList")
	fd_GenesisState_actionExecutorList = md_GenesisState.Fields().ByName("actionExecutorList")
	fd_GenesisState_schemaAttributeList = md_GenesisState.Fields().ByName("schemaAttributeList")
	fd_GenesisState_actionOfSchemaList = md_GenesisState.Fields().ByName("actionOfSchemaList")
	fd_GenesisState_executorOfSchemaList = md_GenesisState.Fields().ByName("executorOfSchemaList")
	fd_GenesisState_virtualActionList = md_GenesisState.Fields().ByName("virtualActionList")
	fd_GenesisState_virtualSchemaList = md_GenesisState.Fields().ByName("virtualSchemaList")
	fd_GenesisState_virtualSchemaProposalList = md_GenesisState.Fields().ByName("virtualSchemaProposalList")
	fd_GenesisState_activeVirtualSchemaProposalList = md_GenesisState.Fields().ByName("activeVirtualSchemaProposalList")
	fd_GenesisState_inactiveVirtualSchemaProposalList = md_GenesisState.Fields().ByName("inactiveVirtualSchemaProposalList")
	fd_GenesisState_lockSchemaFeeList = md_GenesisState.Fields().ByName("lockSchemaFeeList")
}

var _ protoreflect.Message = (*fastReflection_GenesisState)(nil)

type fastReflection_GenesisState GenesisState

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GenesisState)(x)
}

func (x *GenesisState) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftmngr_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GenesisState_messageType fastReflection_GenesisState_messageType
var _ protoreflect.MessageType = fastReflection_GenesisState_messageType{}

type fastReflection_GenesisState_messageType struct{}

func (x fastReflection_GenesisState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GenesisState)(nil)
}
func (x fastReflection_GenesisState_messageType) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}
func (x fastReflection_GenesisState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GenesisState) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GenesisState) Type() protoreflect.MessageType {
	return _fastReflection_GenesisState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GenesisState) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GenesisState) Interface() protoreflect.ProtoMessage {
	return (*GenesisState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GenesisState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_GenesisState_params, value) {
			return
		}
	}
	if len(x.NFTSchemaList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_2_list{list: &x.NFTSchemaList})
		if !f(fd_GenesisState_nFTSchemaList, value) {
			return
		}
	}
	if len(x.NftDataList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_3_list{list: &x.NftDataList})
		if !f(fd_GenesisState_nftDataList, value) {
			return
		}
	}
	if len(x.ActionByRefIdList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_4_list{list: &x.ActionByRefIdList})
		if !f(fd_GenesisState_actionByRefIdList, value) {
			return
		}
	}
	if len(x.OrganizationList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_5_list{list: &x.OrganizationList})
		if !f(fd_GenesisState_organizationList, value) {
			return
		}
	}
	if len(x.NFTSchemaByContractList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_7_list{list: &x.NFTSchemaByContractList})
		if !f(fd_GenesisState_nFTSchemaByContractList, value) {
			return
		}
	}
	if x.NftFeeConfig != nil {
		value := protoreflect.ValueOfMessage(x.NftFeeConfig.ProtoReflect())
		if !f(fd_GenesisState_nft_fee_config, value) {
			return
		}
	}
	if x.NFTFeeBalance != nil {
		value := protoreflect.ValueOfMessage(x.NFTFeeBalance.ProtoReflect())
		if !f(fd_GenesisState_nFTFeeBalance, value) {
			return
		}
	}
	if len(x.MetadataCreatorList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_10_list{list: &x.MetadataCreatorList})
		if !f(fd_GenesisState_metadataCreatorList, value) {
			return
		}
	}
	if len(x.NftCollectionList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_11_list{list: &x.NftCollectionList})
		if !f(fd_GenesisState_nftCollectionList, value) {
			return
		}
	}
	if len(x.ActionExecutorList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_12_list{list: &x.ActionExecutorList})
		if !f(fd_GenesisState_actionExecutorList, value) {
			return
		}
	}
	if len(x.SchemaAttributeList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_13_list{list: &x.SchemaAttributeList})
		if !f(fd_GenesisState_schemaAttributeList, value) {
			return
		}
	}
	if len(x.ActionOfSchemaList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_14_list{list: &x.ActionOfSchemaList})
		if !f(fd_GenesisState_actionOfSchemaList, value) {
			return
		}
	}
	if len(x.ExecutorOfSchemaList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_15_list{list: &x.ExecutorOfSchemaList})
		if !f(fd_GenesisState_executorOfSchemaList, value) {
			return
		}
	}
	if len(x.VirtualActionList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_16_list{list: &x.VirtualActionList})
		if !f(fd_GenesisState_virtualActionList, value) {
			return
		}
	}
	if len(x.VirtualSchemaList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_17_list{list: &x.VirtualSchemaList})
		if !f(fd_GenesisState_virtualSchemaList, value) {
			return
		}
	}
	if len(x.VirtualSchemaProposalList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_19_list{list: &x.VirtualSchemaProposalList})
		if !f(fd_GenesisState_virtualSchemaProposalList, value) {
			return
		}
	}
	if len(x.ActiveVirtualSchemaProposalList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_20_list{list: &x.ActiveVirtualSchemaProposalList})
		if !f(fd_GenesisState_activeVirtualSchemaProposalList, value) {
			return
		}
	}
	if len(x.InactiveVirtualSchemaProposalList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_21_list{list: &x.InactiveVirtualSchemaProposalList})
		if !f(fd_GenesisState_inactiveVirtualSchemaProposalList, value) {
			return
		}
	}
	if len(x.LockSchemaFeeList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_22_list{list: &x.LockSchemaFeeList})
		if !f(fd_GenesisState_lockSchemaFeeList, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GenesisState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.GenesisState.params":
		return x.Params != nil
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaList":
		return len(x.NFTSchemaList) != 0
	case "sixprotocol.nftmngr.GenesisState.nftDataList":
		return len(x.NftDataList) != 0
	case "sixprotocol.nftmngr.GenesisState.actionByRefIdList":
		return len(x.ActionByRefIdList) != 0
	case "sixprotocol.nftmngr.GenesisState.organizationList":
		return len(x.OrganizationList) != 0
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaByContractList":
		return len(x.NFTSchemaByContractList) != 0
	case "sixprotocol.nftmngr.GenesisState.nft_fee_config":
		return x.NftFeeConfig != nil
	case "sixprotocol.nftmngr.GenesisState.nFTFeeBalance":
		return x.NFTFeeBalance != nil
	case "sixprotocol.nftmngr.GenesisState.metadataCreatorList":
		return len(x.MetadataCreatorList) != 0
	case "sixprotocol.nftmngr.GenesisState.nftCollectionList":
		return len(x.NftCollectionList) != 0
	case "sixprotocol.nftmngr.GenesisState.actionExecutorList":
		return len(x.ActionExecutorList) != 0
	case "sixprotocol.nftmngr.GenesisState.schemaAttributeList":
		return len(x.SchemaAttributeList) != 0
	case "sixprotocol.nftmngr.GenesisState.actionOfSchemaList":
		return len(x.ActionOfSchemaList) != 0
	case "sixprotocol.nftmngr.GenesisState.executorOfSchemaList":
		return len(x.ExecutorOfSchemaList) != 0
	case "sixprotocol.nftmngr.GenesisState.virtualActionList":
		return len(x.VirtualActionList) != 0
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaList":
		return len(x.VirtualSchemaList) != 0
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaProposalList":
		return len(x.VirtualSchemaProposalList) != 0
	case "sixprotocol.nftmngr.GenesisState.activeVirtualSchemaProposalList":
		return len(x.ActiveVirtualSchemaProposalList) != 0
	case "sixprotocol.nftmngr.GenesisState.inactiveVirtualSchemaProposalList":
		return len(x.InactiveVirtualSchemaProposalList) != 0
	case "sixprotocol.nftmngr.GenesisState.lockSchemaFeeList":
		return len(x.LockSchemaFeeList) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.GenesisState"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.GenesisState.params":
		x.Params = nil
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaList":
		x.NFTSchemaList = nil
	case "sixprotocol.nftmngr.GenesisState.nftDataList":
		x.NftDataList = nil
	case "sixprotocol.nftmngr.GenesisState.actionByRefIdList":
		x.ActionByRefIdList = nil
	case "sixprotocol.nftmngr.GenesisState.organizationList":
		x.OrganizationList = nil
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaByContractList":
		x.NFTSchemaByContractList = nil
	case "sixprotocol.nftmngr.GenesisState.nft_fee_config":
		x.NftFeeConfig = nil
	case "sixprotocol.nftmngr.GenesisState.nFTFeeBalance":
		x.NFTFeeBalance = nil
	case "sixprotocol.nftmngr.GenesisState.metadataCreatorList":
		x.MetadataCreatorList = nil
	case "sixprotocol.nftmngr.GenesisState.nftCollectionList":
		x.NftCollectionList = nil
	case "sixprotocol.nftmngr.GenesisState.actionExecutorList":
		x.ActionExecutorList = nil
	case "sixprotocol.nftmngr.GenesisState.schemaAttributeList":
		x.SchemaAttributeList = nil
	case "sixprotocol.nftmngr.GenesisState.actionOfSchemaList":
		x.ActionOfSchemaList = nil
	case "sixprotocol.nftmngr.GenesisState.executorOfSchemaList":
		x.ExecutorOfSchemaList = nil
	case "sixprotocol.nftmngr.GenesisState.virtualActionList":
		x.VirtualActionList = nil
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaList":
		x.VirtualSchemaList = nil
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaProposalList":
		x.VirtualSchemaProposalList = nil
	case "sixprotocol.nftmngr.GenesisState.activeVirtualSchemaProposalList":
		x.ActiveVirtualSchemaProposalList = nil
	case "sixprotocol.nftmngr.GenesisState.inactiveVirtualSchemaProposalList":
		x.InactiveVirtualSchemaProposalList = nil
	case "sixprotocol.nftmngr.GenesisState.lockSchemaFeeList":
		x.LockSchemaFeeList = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.GenesisState"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GenesisState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftmngr.GenesisState.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaList":
		if len(x.NFTSchemaList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_2_list{})
		}
		listValue := &_GenesisState_2_list{list: &x.NFTSchemaList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.nftDataList":
		if len(x.NftDataList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_3_list{})
		}
		listValue := &_GenesisState_3_list{list: &x.NftDataList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.actionByRefIdList":
		if len(x.ActionByRefIdList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_4_list{})
		}
		listValue := &_GenesisState_4_list{list: &x.ActionByRefIdList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.organizationList":
		if len(x.OrganizationList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_5_list{})
		}
		listValue := &_GenesisState_5_list{list: &x.OrganizationList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaByContractList":
		if len(x.NFTSchemaByContractList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_7_list{})
		}
		listValue := &_GenesisState_7_list{list: &x.NFTSchemaByContractList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.nft_fee_config":
		value := x.NftFeeConfig
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sixprotocol.nftmngr.GenesisState.nFTFeeBalance":
		value := x.NFTFeeBalance
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sixprotocol.nftmngr.GenesisState.metadataCreatorList":
		if len(x.MetadataCreatorList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_10_list{})
		}
		listValue := &_GenesisState_10_list{list: &x.MetadataCreatorList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.nftCollectionList":
		if len(x.NftCollectionList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_11_list{})
		}
		listValue := &_GenesisState_11_list{list: &x.NftCollectionList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.actionExecutorList":
		if len(x.ActionExecutorList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_12_list{})
		}
		listValue := &_GenesisState_12_list{list: &x.ActionExecutorList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.schemaAttributeList":
		if len(x.SchemaAttributeList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_13_list{})
		}
		listValue := &_GenesisState_13_list{list: &x.SchemaAttributeList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.actionOfSchemaList":
		if len(x.ActionOfSchemaList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_14_list{})
		}
		listValue := &_GenesisState_14_list{list: &x.ActionOfSchemaList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.executorOfSchemaList":
		if len(x.ExecutorOfSchemaList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_15_list{})
		}
		listValue := &_GenesisState_15_list{list: &x.ExecutorOfSchemaList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.virtualActionList":
		if len(x.VirtualActionList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_16_list{})
		}
		listValue := &_GenesisState_16_list{list: &x.VirtualActionList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaList":
		if len(x.VirtualSchemaList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_17_list{})
		}
		listValue := &_GenesisState_17_list{list: &x.VirtualSchemaList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaProposalList":
		if len(x.VirtualSchemaProposalList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_19_list{})
		}
		listValue := &_GenesisState_19_list{list: &x.VirtualSchemaProposalList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.activeVirtualSchemaProposalList":
		if len(x.ActiveVirtualSchemaProposalList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_20_list{})
		}
		listValue := &_GenesisState_20_list{list: &x.ActiveVirtualSchemaProposalList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.inactiveVirtualSchemaProposalList":
		if len(x.InactiveVirtualSchemaProposalList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_21_list{})
		}
		listValue := &_GenesisState_21_list{list: &x.InactiveVirtualSchemaProposalList}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.GenesisState.lockSchemaFeeList":
		if len(x.LockSchemaFeeList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_22_list{})
		}
		listValue := &_GenesisState_22_list{list: &x.LockSchemaFeeList}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.GenesisState"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.GenesisState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.GenesisState.params":
		x.Params = value.Message().Interface().(*Params)
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaList":
		lv := value.List()
		clv := lv.(*_GenesisState_2_list)
		x.NFTSchemaList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.nftDataList":
		lv := value.List()
		clv := lv.(*_GenesisState_3_list)
		x.NftDataList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.actionByRefIdList":
		lv := value.List()
		clv := lv.(*_GenesisState_4_list)
		x.ActionByRefIdList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.organizationList":
		lv := value.List()
		clv := lv.(*_GenesisState_5_list)
		x.OrganizationList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaByContractList":
		lv := value.List()
		clv := lv.(*_GenesisState_7_list)
		x.NFTSchemaByContractList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.nft_fee_config":
		x.NftFeeConfig = value.Message().Interface().(*NFTFeeConfig)
	case "sixprotocol.nftmngr.GenesisState.nFTFeeBalance":
		x.NFTFeeBalance = value.Message().Interface().(*NFTFeeBalance)
	case "sixprotocol.nftmngr.GenesisState.metadataCreatorList":
		lv := value.List()
		clv := lv.(*_GenesisState_10_list)
		x.MetadataCreatorList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.nftCollectionList":
		lv := value.List()
		clv := lv.(*_GenesisState_11_list)
		x.NftCollectionList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.actionExecutorList":
		lv := value.List()
		clv := lv.(*_GenesisState_12_list)
		x.ActionExecutorList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.schemaAttributeList":
		lv := value.List()
		clv := lv.(*_GenesisState_13_list)
		x.SchemaAttributeList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.actionOfSchemaList":
		lv := value.List()
		clv := lv.(*_GenesisState_14_list)
		x.ActionOfSchemaList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.executorOfSchemaList":
		lv := value.List()
		clv := lv.(*_GenesisState_15_list)
		x.ExecutorOfSchemaList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.virtualActionList":
		lv := value.List()
		clv := lv.(*_GenesisState_16_list)
		x.VirtualActionList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaList":
		lv := value.List()
		clv := lv.(*_GenesisState_17_list)
		x.VirtualSchemaList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaProposalList":
		lv := value.List()
		clv := lv.(*_GenesisState_19_list)
		x.VirtualSchemaProposalList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.activeVirtualSchemaProposalList":
		lv := value.List()
		clv := lv.(*_GenesisState_20_list)
		x.ActiveVirtualSchemaProposalList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.inactiveVirtualSchemaProposalList":
		lv := value.List()
		clv := lv.(*_GenesisState_21_list)
		x.InactiveVirtualSchemaProposalList = *clv.list
	case "sixprotocol.nftmngr.GenesisState.lockSchemaFeeList":
		lv := value.List()
		clv := lv.(*_GenesisState_22_list)
		x.LockSchemaFeeList = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.GenesisState"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.GenesisState.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaList":
		if x.NFTSchemaList == nil {
			x.NFTSchemaList = []*NFTSchema{}
		}
		value := &_GenesisState_2_list{list: &x.NFTSchemaList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.nftDataList":
		if x.NftDataList == nil {
			x.NftDataList = []*NftData{}
		}
		value := &_GenesisState_3_list{list: &x.NftDataList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.actionByRefIdList":
		if x.ActionByRefIdList == nil {
			x.ActionByRefIdList = []*ActionByRefId{}
		}
		value := &_GenesisState_4_list{list: &x.ActionByRefIdList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.organizationList":
		if x.OrganizationList == nil {
			x.OrganizationList = []*Organization{}
		}
		value := &_GenesisState_5_list{list: &x.OrganizationList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaByContractList":
		if x.NFTSchemaByContractList == nil {
			x.NFTSchemaByContractList = []*NFTSchemaByContract{}
		}
		value := &_GenesisState_7_list{list: &x.NFTSchemaByContractList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.nft_fee_config":
		if x.NftFeeConfig == nil {
			x.NftFeeConfig = new(NFTFeeConfig)
		}
		return protoreflect.ValueOfMessage(x.NftFeeConfig.ProtoReflect())
	case "sixprotocol.nftmngr.GenesisState.nFTFeeBalance":
		if x.NFTFeeBalance == nil {
			x.NFTFeeBalance = new(NFTFeeBalance)
		}
		return protoreflect.ValueOfMessage(x.NFTFeeBalance.ProtoReflect())
	case "sixprotocol.nftmngr.GenesisState.metadataCreatorList":
		if x.MetadataCreatorList == nil {
			x.MetadataCreatorList = []*MetadataCreator{}
		}
		value := &_GenesisState_10_list{list: &x.MetadataCreatorList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.nftCollectionList":
		if x.NftCollectionList == nil {
			x.NftCollectionList = []*NftCollection{}
		}
		value := &_GenesisState_11_list{list: &x.NftCollectionList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.actionExecutorList":
		if x.ActionExecutorList == nil {
			x.ActionExecutorList = []*ActionExecutor{}
		}
		value := &_GenesisState_12_list{list: &x.ActionExecutorList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.schemaAttributeList":
		if x.SchemaAttributeList == nil {
			x.SchemaAttributeList = []*SchemaAttribute{}
		}
		value := &_GenesisState_13_list{list: &x.SchemaAttributeList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.actionOfSchemaList":
		if x.ActionOfSchemaList == nil {
			x.ActionOfSchemaList = []*ActionOfSchema{}
		}
		value := &_GenesisState_14_list{list: &x.ActionOfSchemaList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.executorOfSchemaList":
		if x.ExecutorOfSchemaList == nil {
			x.ExecutorOfSchemaList = []*ExecutorOfSchema{}
		}
		value := &_GenesisState_15_list{list: &x.ExecutorOfSchemaList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.virtualActionList":
		if x.VirtualActionList == nil {
			x.VirtualActionList = []*VirtualAction{}
		}
		value := &_GenesisState_16_list{list: &x.VirtualActionList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaList":
		if x.VirtualSchemaList == nil {
			x.VirtualSchemaList = []*VirtualSchema{}
		}
		value := &_GenesisState_17_list{list: &x.VirtualSchemaList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaProposalList":
		if x.VirtualSchemaProposalList == nil {
			x.VirtualSchemaProposalList = []*VirtualSchemaProposal{}
		}
		value := &_GenesisState_19_list{list: &x.VirtualSchemaProposalList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.activeVirtualSchemaProposalList":
		if x.ActiveVirtualSchemaProposalList == nil {
			x.ActiveVirtualSchemaProposalList = []*ActiveVirtualSchemaProposal{}
		}
		value := &_GenesisState_20_list{list: &x.ActiveVirtualSchemaProposalList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.inactiveVirtualSchemaProposalList":
		if x.InactiveVirtualSchemaProposalList == nil {
			x.InactiveVirtualSchemaProposalList = []*InactiveVirtualSchemaProposal{}
		}
		value := &_GenesisState_21_list{list: &x.InactiveVirtualSchemaProposalList}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.GenesisState.lockSchemaFeeList":
		if x.LockSchemaFeeList == nil {
			x.LockSchemaFeeList = []*LockSchemaFee{}
		}
		value := &_GenesisState_22_list{list: &x.LockSchemaFeeList}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.GenesisState"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.GenesisState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GenesisState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.GenesisState.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaList":
		list := []*NFTSchema{}
		return protoreflect.ValueOfList(&_GenesisState_2_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.nftDataList":
		list := []*NftData{}
		return protoreflect.ValueOfList(&_GenesisState_3_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.actionByRefIdList":
		list := []*ActionByRefId{}
		return protoreflect.ValueOfList(&_GenesisState_4_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.organizationList":
		list := []*Organization{}
		return protoreflect.ValueOfList(&_GenesisState_5_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.nFTSchemaByContractList":
		list := []*NFTSchemaByContract{}
		return protoreflect.ValueOfList(&_GenesisState_7_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.nft_fee_config":
		m := new(NFTFeeConfig)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sixprotocol.nftmngr.GenesisState.nFTFeeBalance":
		m := new(NFTFeeBalance)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sixprotocol.nftmngr.GenesisState.metadataCreatorList":
		list := []*MetadataCreator{}
		return protoreflect.ValueOfList(&_GenesisState_10_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.nftCollectionList":
		list := []*NftCollection{}
		return protoreflect.ValueOfList(&_GenesisState_11_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.actionExecutorList":
		list := []*ActionExecutor{}
		return protoreflect.ValueOfList(&_GenesisState_12_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.schemaAttributeList":
		list := []*SchemaAttribute{}
		return protoreflect.ValueOfList(&_GenesisState_13_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.actionOfSchemaList":
		list := []*ActionOfSchema{}
		return protoreflect.ValueOfList(&_GenesisState_14_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.executorOfSchemaList":
		list := []*ExecutorOfSchema{}
		return protoreflect.ValueOfList(&_GenesisState_15_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.virtualActionList":
		list := []*VirtualAction{}
		return protoreflect.ValueOfList(&_GenesisState_16_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaList":
		list := []*VirtualSchema{}
		return protoreflect.ValueOfList(&_GenesisState_17_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.virtualSchemaProposalList":
		list := []*VirtualSchemaProposal{}
		return protoreflect.ValueOfList(&_GenesisState_19_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.activeVirtualSchemaProposalList":
		list := []*ActiveVirtualSchemaProposal{}
		return protoreflect.ValueOfList(&_GenesisState_20_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.inactiveVirtualSchemaProposalList":
		list := []*InactiveVirtualSchemaProposal{}
		return protoreflect.ValueOfList(&_GenesisState_21_list{list: &list})
	case "sixprotocol.nftmngr.GenesisState.lockSchemaFeeList":
		list := []*LockSchemaFee{}
		return protoreflect.ValueOfList(&_GenesisState_22_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.GenesisState"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.GenesisState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GenesisState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftmngr.GenesisState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GenesisState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GenesisState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GenesisState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.NFTSchemaList) > 0 {
			for _, e := range x.NFTSchemaList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.NftDataList) > 0 {
			for _, e := range x.NftDataList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ActionByRefIdList) > 0 {
			for _, e := range x.ActionByRefIdList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OrganizationList) > 0 {
			for _, e := range x.OrganizationList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.NFTSchemaByContractList) > 0 {
			for _, e := range x.NFTSchemaByContractList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.NftFeeConfig != nil {
			l = options.Size(x.NftFeeConfig)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NFTFeeBalance != nil {
			l = options.Size(x.NFTFeeBalance)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.MetadataCreatorList) > 0 {
			for _, e := range x.MetadataCreatorList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.NftCollectionList) > 0 {
			for _, e := range x.NftCollectionList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ActionExecutorList) > 0 {
			for _, e := range x.ActionExecutorList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.SchemaAttributeList) > 0 {
			for _, e := range x.SchemaAttributeList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ActionOfSchemaList) > 0 {
			for _, e := range x.ActionOfSchemaList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ExecutorOfSchemaList) > 0 {
			for _, e := range x.ExecutorOfSchemaList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.VirtualActionList) > 0 {
			for _, e := range x.VirtualActionList {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.VirtualSchemaList) > 0 {
			for _, e := range x.VirtualSchemaList {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.VirtualSchemaProposalList) > 0 {
			for _, e := range x.VirtualSchemaProposalList {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ActiveVirtualSchemaProposalList) > 0 {
			for _, e := range x.ActiveVirtualSchemaProposalList {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.InactiveVirtualSchemaProposalList) > 0 {
			for _, e := range x.InactiveVirtualSchemaProposalList {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LockSchemaFeeList) > 0 {
			for _, e := range x.LockSchemaFeeList {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LockSchemaFeeList) > 0 {
			for iNdEx := len(x.LockSchemaFeeList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LockSchemaFeeList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xb2
			}
		}
		if len(x.InactiveVirtualSchemaProposalList) > 0 {
			for iNdEx := len(x.InactiveVirtualSchemaProposalList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.InactiveVirtualSchemaProposalList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xaa
			}
		}
		if len(x.ActiveVirtualSchemaProposalList) > 0 {
			for iNdEx := len(x.ActiveVirtualSchemaProposalList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ActiveVirtualSchemaProposalList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xa2
			}
		}
		if len(x.VirtualSchemaProposalList) > 0 {
			for iNdEx := len(x.VirtualSchemaProposalList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.VirtualSchemaProposalList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x9a
			}
		}
		if len(x.VirtualSchemaList) > 0 {
			for iNdEx := len(x.VirtualSchemaList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.VirtualSchemaList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x8a
			}
		}
		if len(x.VirtualActionList) > 0 {
			for iNdEx := len(x.VirtualActionList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.VirtualActionList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x82
			}
		}
		if len(x.ExecutorOfSchemaList) > 0 {
			for iNdEx := len(x.ExecutorOfSchemaList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ExecutorOfSchemaList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x7a
			}
		}
		if len(x.ActionOfSchemaList) > 0 {
			for iNdEx := len(x.ActionOfSchemaList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ActionOfSchemaList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x72
			}
		}
		if len(x.SchemaAttributeList) > 0 {
			for iNdEx := len(x.SchemaAttributeList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SchemaAttributeList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x6a
			}
		}
		if len(x.ActionExecutorList) > 0 {
			for iNdEx := len(x.ActionExecutorList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ActionExecutorList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.NftCollectionList) > 0 {
			for iNdEx := len(x.NftCollectionList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.NftCollectionList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.MetadataCreatorList) > 0 {
			for iNdEx := len(x.MetadataCreatorList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.MetadataCreatorList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if x.NFTFeeBalance != nil {
			encoded, err := options.Marshal(x.NFTFeeBalance)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x4a
		}
		if x.NftFeeConfig != nil {
			encoded, err := options.Marshal(x.NftFeeConfig)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.NFTSchemaByContractList) > 0 {
			for iNdEx := len(x.NFTSchemaByContractList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.NFTSchemaByContractList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.OrganizationList) > 0 {
			for iNdEx := len(x.OrganizationList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OrganizationList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.ActionByRefIdList) > 0 {
			for iNdEx := len(x.ActionByRefIdList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ActionByRefIdList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.NftDataList) > 0 {
			for iNdEx := len(x.NftDataList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.NftDataList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.NFTSchemaList) > 0 {
			for iNdEx := len(x.NFTSchemaList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.NFTSchemaList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NFTSchemaList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NFTSchemaList = append(x.NFTSchemaList, &NFTSchema{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NFTSchemaList[len(x.NFTSchemaList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftDataList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NftDataList = append(x.NftDataList, &NftData{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NftDataList[len(x.NftDataList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActionByRefIdList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActionByRefIdList = append(x.ActionByRefIdList, &ActionByRefId{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ActionByRefIdList[len(x.ActionByRefIdList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OrganizationList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OrganizationList = append(x.OrganizationList, &Organization{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OrganizationList[len(x.OrganizationList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NFTSchemaByContractList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NFTSchemaByContractList = append(x.NFTSchemaByContractList, &NFTSchemaByContract{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NFTSchemaByContractList[len(x.NFTSchemaByContractList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftFeeConfig", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.NftFeeConfig == nil {
					x.NftFeeConfig = &NFTFeeConfig{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NftFeeConfig); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NFTFeeBalance", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.NFTFeeBalance == nil {
					x.NFTFeeBalance = &NFTFeeBalance{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NFTFeeBalance); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MetadataCreatorList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MetadataCreatorList = append(x.MetadataCreatorList, &MetadataCreator{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MetadataCreatorList[len(x.MetadataCreatorList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftCollectionList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NftCollectionList = append(x.NftCollectionList, &NftCollection{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NftCollectionList[len(x.NftCollectionList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActionExecutorList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActionExecutorList = append(x.ActionExecutorList, &ActionExecutor{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ActionExecutorList[len(x.ActionExecutorList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SchemaAttributeList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SchemaAttributeList = append(x.SchemaAttributeList, &SchemaAttribute{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SchemaAttributeList[len(x.SchemaAttributeList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActionOfSchemaList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActionOfSchemaList = append(x.ActionOfSchemaList, &ActionOfSchema{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ActionOfSchemaList[len(x.ActionOfSchemaList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExecutorOfSchemaList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExecutorOfSchemaList = append(x.ExecutorOfSchemaList, &ExecutorOfSchema{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ExecutorOfSchemaList[len(x.ExecutorOfSchemaList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VirtualActionList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VirtualActionList = append(x.VirtualActionList, &VirtualAction{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VirtualActionList[len(x.VirtualActionList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 17:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VirtualSchemaList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VirtualSchemaList = append(x.VirtualSchemaList, &VirtualSchema{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VirtualSchemaList[len(x.VirtualSchemaList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 19:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VirtualSchemaProposalList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VirtualSchemaProposalList = append(x.VirtualSchemaProposalList, &VirtualSchemaProposal{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VirtualSchemaProposalList[len(x.VirtualSchemaProposalList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 20:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActiveVirtualSchemaProposalList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActiveVirtualSchemaProposalList = append(x.ActiveVirtualSchemaProposalList, &ActiveVirtualSchemaProposal{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ActiveVirtualSchemaProposalList[len(x.ActiveVirtualSchemaProposalList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 21:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InactiveVirtualSchemaProposalList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InactiveVirtualSchemaProposalList = append(x.InactiveVirtualSchemaProposalList, &InactiveVirtualSchemaProposal{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InactiveVirtualSchemaProposalList[len(x.InactiveVirtualSchemaProposalList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 22:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LockSchemaFeeList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LockSchemaFeeList = append(x.LockSchemaFeeList, &LockSchemaFee{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LockSchemaFeeList[len(x.LockSchemaFeeList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: sixprotocol/nftmngr/genesis.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GenesisState defines the nftmngr module's genesis state.
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params                            *Params                          `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	NFTSchemaList                     []*NFTSchema                     `protobuf:"bytes,2,rep,name=nFTSchemaList,proto3" json:"nFTSchemaList,omitempty"`
	NftDataList                       []*NftData                       `protobuf:"bytes,3,rep,name=nftDataList,proto3" json:"nftDataList,omitempty"`
	ActionByRefIdList                 []*ActionByRefId                 `protobuf:"bytes,4,rep,name=actionByRefIdList,proto3" json:"actionByRefIdList,omitempty"`
	OrganizationList                  []*Organization                  `protobuf:"bytes,5,rep,name=organizationList,proto3" json:"organizationList,omitempty"`
	NFTSchemaByContractList           []*NFTSchemaByContract           `protobuf:"bytes,7,rep,name=nFTSchemaByContractList,proto3" json:"nFTSchemaByContractList,omitempty"`
	NftFeeConfig                      *NFTFeeConfig                    `protobuf:"bytes,8,opt,name=nft_fee_config,json=nftFeeConfig,proto3" json:"nft_fee_config,omitempty"`
	NFTFeeBalance                     *NFTFeeBalance                   `protobuf:"bytes,9,opt,name=nFTFeeBalance,proto3" json:"nFTFeeBalance,omitempty"`
	MetadataCreatorList               []*MetadataCreator               `protobuf:"bytes,10,rep,name=metadataCreatorList,proto3" json:"metadataCreatorList,omitempty"`
	NftCollectionList                 []*NftCollection                 `protobuf:"bytes,11,rep,name=nftCollectionList,proto3" json:"nftCollectionList,omitempty"`
	ActionExecutorList                []*ActionExecutor                `protobuf:"bytes,12,rep,name=actionExecutorList,proto3" json:"actionExecutorList,omitempty"`
	SchemaAttributeList               []*SchemaAttribute               `protobuf:"bytes,13,rep,name=schemaAttributeList,proto3" json:"schemaAttributeList,omitempty"`
	ActionOfSchemaList                []*ActionOfSchema                `protobuf:"bytes,14,rep,name=actionOfSchemaList,proto3" json:"actionOfSchemaList,omitempty"`
	ExecutorOfSchemaList              []*ExecutorOfSchema              `protobuf:"bytes,15,rep,name=executorOfSchemaList,proto3" json:"executorOfSchemaList,omitempty"`
	VirtualActionList                 []*VirtualAction                 `protobuf:"bytes,16,rep,name=virtualActionList,proto3" json:"virtualActionList,omitempty"`
	VirtualSchemaList                 []*VirtualSchema                 `protobuf:"bytes,17,rep,name=virtualSchemaList,proto3" json:"virtualSchemaList,omitempty"`
	VirtualSchemaProposalList         []*VirtualSchemaProposal         `protobuf:"bytes,19,rep,name=virtualSchemaProposalList,proto3" json:"virtualSchemaProposalList,omitempty"`
	ActiveVirtualSchemaProposalList   []*ActiveVirtualSchemaProposal   `protobuf:"bytes,20,rep,name=activeVirtualSchemaProposalList,proto3" json:"activeVirtualSchemaProposalList,omitempty"`
	InactiveVirtualSchemaProposalList []*InactiveVirtualSchemaProposal `protobuf:"bytes,21,rep,name=inactiveVirtualSchemaProposalList,proto3" json:"inactiveVirtualSchemaProposalList,omitempty"`
	LockSchemaFeeList                 []*LockSchemaFee                 `protobuf:"bytes,22,rep,name=lockSchemaFeeList,proto3" json:"lockSchemaFeeList,omitempty"` // this line is used by starport scaffolding # genesis/proto/state
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftmngr_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *GenesisState) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenesisState) GetNFTSchemaList() []*NFTSchema {
	if x != nil {
		return x.NFTSchemaList
	}
	return nil
}

func (x *GenesisState) GetNftDataList() []*NftData {
	if x != nil {
		return x.NftDataList
	}
	return nil
}

func (x *GenesisState) GetActionByRefIdList() []*ActionByRefId {
	if x != nil {
		return x.ActionByRefIdList
	}
	return nil
}

func (x *GenesisState) GetOrganizationList() []*Organization {
	if x != nil {
		return x.OrganizationList
	}
	return nil
}

func (x *GenesisState) GetNFTSchemaByContractList() []*NFTSchemaByContract {
	if x != nil {
		return x.NFTSchemaByContractList
	}
	return nil
}

func (x *GenesisState) GetNftFeeConfig() *NFTFeeConfig {
	if x != nil {
		return x.NftFeeConfig
	}
	return nil
}

func (x *GenesisState) GetNFTFeeBalance() *NFTFeeBalance {
	if x != nil {
		return x.NFTFeeBalance
	}
	return nil
}

func (x *GenesisState) GetMetadataCreatorList() []*MetadataCreator {
	if x != nil {
		return x.MetadataCreatorList
	}
	return nil
}

func (x *GenesisState) GetNftCollectionList() []*NftCollection {
	if x != nil {
		return x.NftCollectionList
	}
	return nil
}

func (x *GenesisState) GetActionExecutorList() []*ActionExecutor {
	if x != nil {
		return x.ActionExecutorList
	}
	return nil
}

func (x *GenesisState) GetSchemaAttributeList() []*SchemaAttribute {
	if x != nil {
		return x.SchemaAttributeList
	}
	return nil
}

func (x *GenesisState) GetActionOfSchemaList() []*ActionOfSchema {
	if x != nil {
		return x.ActionOfSchemaList
	}
	return nil
}

func (x *GenesisState) GetExecutorOfSchemaList() []*ExecutorOfSchema {
	if x != nil {
		return x.ExecutorOfSchemaList
	}
	return nil
}

func (x *GenesisState) GetVirtualActionList() []*VirtualAction {
	if x != nil {
		return x.VirtualActionList
	}
	return nil
}

func (x *GenesisState) GetVirtualSchemaList() []*VirtualSchema {
	if x != nil {
		return x.VirtualSchemaList
	}
	return nil
}

func (x *GenesisState) GetVirtualSchemaProposalList() []*VirtualSchemaProposal {
	if x != nil {
		return x.VirtualSchemaProposalList
	}
	return nil
}

func (x *GenesisState) GetActiveVirtualSchemaProposalList() []*ActiveVirtualSchemaProposal {
	if x != nil {
		return x.ActiveVirtualSchemaProposalList
	}
	return nil
}

func (x *GenesisState) GetInactiveVirtualSchemaProposalList() []*InactiveVirtualSchemaProposal {
	if x != nil {
		return x.InactiveVirtualSchemaProposalList
	}
	return nil
}

func (x *GenesisState) GetLockSchemaFeeList() []*LockSchemaFee {
	if x != nil {
		return x.LockSchemaFeeList
	}
	return nil
}

var File_sixprotocol_nftmngr_genesis_proto protoreflect.FileDescriptor

var file_sixprotocol_nftmngr_genesis_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66,
	0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d,
	0x6e, 0x67, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66,
	0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x6e, 0x66, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x6e, 0x66, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x73, 0x69, 0x78, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30,
	0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d,
	0x6e, 0x67, 0x72, 0x2f, 0x6e, 0x66, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x62,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x28, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66,
	0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x6e, 0x66, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x73, 0x69, 0x78, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f,
	0x6e, 0x66, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x28, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e,
	0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x6e, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x73, 0x69, 0x78,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2a, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x66, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c,
	0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d,
	0x6e, 0x67, 0x72, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x73, 0x69,
	0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67,
	0x72, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x29, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66,
	0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x66, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x0e, 0x0a, 0x0c,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e,
	0x67, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x6e, 0x46, 0x54, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74,
	0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x4e, 0x46, 0x54, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d, 0x6e, 0x46, 0x54, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x4e,
	0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x6e, 0x66,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x11, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x52, 0x65, 0x66, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x52, 0x65, 0x66, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x11,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x52, 0x65, 0x66, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x53, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x69,
	0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67,
	0x72, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x17, 0x6e, 0x46, 0x54, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x4e, 0x46,
	0x54, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x17, 0x6e, 0x46, 0x54, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x47, 0x0a, 0x0e, 0x6e, 0x66, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x4e,
	0x46, 0x54, 0x46, 0x65, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x6e, 0x66, 0x74,
	0x46, 0x65, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x48, 0x0a, 0x0d, 0x6e, 0x46, 0x54,
	0x46, 0x65, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e,
	0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x4e, 0x46, 0x54, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x0d, 0x6e, 0x46, 0x54, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e,
	0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x13, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x56, 0x0a, 0x11, 0x6e, 0x66, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73,
	0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e,
	0x67, 0x72, 0x2e, 0x4e, 0x66, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x11, 0x6e, 0x66, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x12, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x13, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x59, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74,
	0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x66, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5f, 0x0a,
	0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x69,
	0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67,
	0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x4f, 0x66, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x56,
	0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x69, 0x78, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x11, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6e,
	0x0a, 0x19, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x19, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x80,
	0x01, 0x0a, 0x1f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x1f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x86, 0x01, 0x0a, 0x21, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d,
	0x6e, 0x67, 0x72, 0x2e, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x21, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x11, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x4c, 0x6f, 0x63, 0x6b,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x65, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x65, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0xd3, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x42, 0x0c,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x78, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x69, 0x78, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0xa2, 0x02, 0x03,
	0x53, 0x4e, 0x58, 0xaa, 0x02, 0x13, 0x53, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x4e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0xca, 0x02, 0x13, 0x53, 0x69, 0x78, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x4e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0xe2,
	0x02, 0x1f, 0x53, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x4e, 0x66,
	0x74, 0x6d, 0x6e, 0x67, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x14, 0x53, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x3a,
	0x3a, 0x4e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sixprotocol_nftmngr_genesis_proto_rawDescOnce sync.Once
	file_sixprotocol_nftmngr_genesis_proto_rawDescData = file_sixprotocol_nftmngr_genesis_proto_rawDesc
)

func file_sixprotocol_nftmngr_genesis_proto_rawDescGZIP() []byte {
	file_sixprotocol_nftmngr_genesis_proto_rawDescOnce.Do(func() {
		file_sixprotocol_nftmngr_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_sixprotocol_nftmngr_genesis_proto_rawDescData)
	})
	return file_sixprotocol_nftmngr_genesis_proto_rawDescData
}

var file_sixprotocol_nftmngr_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sixprotocol_nftmngr_genesis_proto_goTypes = []interface{}{
	(*GenesisState)(nil),                  // 0: sixprotocol.nftmngr.GenesisState
	(*Params)(nil),                        // 1: sixprotocol.nftmngr.Params
	(*NFTSchema)(nil),                     // 2: sixprotocol.nftmngr.NFTSchema
	(*NftData)(nil),                       // 3: sixprotocol.nftmngr.NftData
	(*ActionByRefId)(nil),                 // 4: sixprotocol.nftmngr.ActionByRefId
	(*Organization)(nil),                  // 5: sixprotocol.nftmngr.Organization
	(*NFTSchemaByContract)(nil),           // 6: sixprotocol.nftmngr.NFTSchemaByContract
	(*NFTFeeConfig)(nil),                  // 7: sixprotocol.nftmngr.NFTFeeConfig
	(*NFTFeeBalance)(nil),                 // 8: sixprotocol.nftmngr.NFTFeeBalance
	(*MetadataCreator)(nil),               // 9: sixprotocol.nftmngr.MetadataCreator
	(*NftCollection)(nil),                 // 10: sixprotocol.nftmngr.NftCollection
	(*ActionExecutor)(nil),                // 11: sixprotocol.nftmngr.ActionExecutor
	(*SchemaAttribute)(nil),               // 12: sixprotocol.nftmngr.SchemaAttribute
	(*ActionOfSchema)(nil),                // 13: sixprotocol.nftmngr.ActionOfSchema
	(*ExecutorOfSchema)(nil),              // 14: sixprotocol.nftmngr.ExecutorOfSchema
	(*VirtualAction)(nil),                 // 15: sixprotocol.nftmngr.VirtualAction
	(*VirtualSchema)(nil),                 // 16: sixprotocol.nftmngr.VirtualSchema
	(*VirtualSchemaProposal)(nil),         // 17: sixprotocol.nftmngr.VirtualSchemaProposal
	(*ActiveVirtualSchemaProposal)(nil),   // 18: sixprotocol.nftmngr.ActiveVirtualSchemaProposal
	(*InactiveVirtualSchemaProposal)(nil), // 19: sixprotocol.nftmngr.InactiveVirtualSchemaProposal
	(*LockSchemaFee)(nil),                 // 20: sixprotocol.nftmngr.LockSchemaFee
}
var file_sixprotocol_nftmngr_genesis_proto_depIdxs = []int32{
	1,  // 0: sixprotocol.nftmngr.GenesisState.params:type_name -> sixprotocol.nftmngr.Params
	2,  // 1: sixprotocol.nftmngr.GenesisState.nFTSchemaList:type_name -> sixprotocol.nftmngr.NFTSchema
	3,  // 2: sixprotocol.nftmngr.GenesisState.nftDataList:type_name -> sixprotocol.nftmngr.NftData
	4,  // 3: sixprotocol.nftmngr.GenesisState.actionByRefIdList:type_name -> sixprotocol.nftmngr.ActionByRefId
	5,  // 4: sixprotocol.nftmngr.GenesisState.organizationList:type_name -> sixprotocol.nftmngr.Organization
	6,  // 5: sixprotocol.nftmngr.GenesisState.nFTSchemaByContractList:type_name -> sixprotocol.nftmngr.NFTSchemaByContract
	7,  // 6: sixprotocol.nftmngr.GenesisState.nft_fee_config:type_name -> sixprotocol.nftmngr.NFTFeeConfig
	8,  // 7: sixprotocol.nftmngr.GenesisState.nFTFeeBalance:type_name -> sixprotocol.nftmngr.NFTFeeBalance
	9,  // 8: sixprotocol.nftmngr.GenesisState.metadataCreatorList:type_name -> sixprotocol.nftmngr.MetadataCreator
	10, // 9: sixprotocol.nftmngr.GenesisState.nftCollectionList:type_name -> sixprotocol.nftmngr.NftCollection
	11, // 10: sixprotocol.nftmngr.GenesisState.actionExecutorList:type_name -> sixprotocol.nftmngr.ActionExecutor
	12, // 11: sixprotocol.nftmngr.GenesisState.schemaAttributeList:type_name -> sixprotocol.nftmngr.SchemaAttribute
	13, // 12: sixprotocol.nftmngr.GenesisState.actionOfSchemaList:type_name -> sixprotocol.nftmngr.ActionOfSchema
	14, // 13: sixprotocol.nftmngr.GenesisState.executorOfSchemaList:type_name -> sixprotocol.nftmngr.ExecutorOfSchema
	15, // 14: sixprotocol.nftmngr.GenesisState.virtualActionList:type_name -> sixprotocol.nftmngr.VirtualAction
	16, // 15: sixprotocol.nftmngr.GenesisState.virtualSchemaList:type_name -> sixprotocol.nftmngr.VirtualSchema
	17, // 16: sixprotocol.nftmngr.GenesisState.virtualSchemaProposalList:type_name -> sixprotocol.nftmngr.VirtualSchemaProposal
	18, // 17: sixprotocol.nftmngr.GenesisState.activeVirtualSchemaProposalList:type_name -> sixprotocol.nftmngr.ActiveVirtualSchemaProposal
	19, // 18: sixprotocol.nftmngr.GenesisState.inactiveVirtualSchemaProposalList:type_name -> sixprotocol.nftmngr.InactiveVirtualSchemaProposal
	20, // 19: sixprotocol.nftmngr.GenesisState.lockSchemaFeeList:type_name -> sixprotocol.nftmngr.LockSchemaFee
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_sixprotocol_nftmngr_genesis_proto_init() }
func file_sixprotocol_nftmngr_genesis_proto_init() {
	if File_sixprotocol_nftmngr_genesis_proto != nil {
		return
	}
	file_sixprotocol_nftmngr_params_proto_init()
	file_sixprotocol_nftmngr_nft_schema_proto_init()
	file_sixprotocol_nftmngr_nft_data_proto_init()
	file_sixprotocol_nftmngr_action_by_ref_id_proto_init()
	file_sixprotocol_nftmngr_organization_proto_init()
	file_sixprotocol_nftmngr_nft_schema_by_contract_proto_init()
	file_sixprotocol_nftmngr_nft_fee_config_proto_init()
	file_sixprotocol_nftmngr_nft_fee_balance_proto_init()
	file_sixprotocol_nftmngr_metadata_creator_proto_init()
	file_sixprotocol_nftmngr_nft_collection_proto_init()
	file_sixprotocol_nftmngr_action_executor_proto_init()
	file_sixprotocol_nftmngr_schema_attribute_proto_init()
	file_sixprotocol_nftmngr_action_of_schema_proto_init()
	file_sixprotocol_nftmngr_executor_of_schema_proto_init()
	file_sixprotocol_nftmngr_virtual_action_proto_init()
	file_sixprotocol_nftmngr_virtual_schema_proto_init()
	file_sixprotocol_nftmngr_lock_schema_fee_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sixprotocol_nftmngr_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sixprotocol_nftmngr_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sixprotocol_nftmngr_genesis_proto_goTypes,
		DependencyIndexes: file_sixprotocol_nftmngr_genesis_proto_depIdxs,
		MessageInfos:      file_sixprotocol_nftmngr_genesis_proto_msgTypes,
	}.Build()
	File_sixprotocol_nftmngr_genesis_proto = out.File
	file_sixprotocol_nftmngr_genesis_proto_rawDesc = nil
	file_sixprotocol_nftmngr_genesis_proto_goTypes = nil
	file_sixprotocol_nftmngr_genesis_proto_depIdxs = nil
}
