// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package nftmngr

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_VirtualSchemaProposal_4_list)(nil)

type _VirtualSchemaProposal_4_list struct {
	list *[]*Action
}

func (x *_VirtualSchemaProposal_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VirtualSchemaProposal_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_VirtualSchemaProposal_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Action)
	(*x.list)[i] = concreteValue
}

func (x *_VirtualSchemaProposal_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Action)
	*x.list = append(*x.list, concreteValue)
}

func (x *_VirtualSchemaProposal_4_list) AppendMutable() protoreflect.Value {
	v := new(Action)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_VirtualSchemaProposal_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_VirtualSchemaProposal_4_list) NewElement() protoreflect.Value {
	v := new(Action)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_VirtualSchemaProposal_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_VirtualSchemaProposal_5_list)(nil)

type _VirtualSchemaProposal_5_list struct {
	list *[]string
}

func (x *_VirtualSchemaProposal_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VirtualSchemaProposal_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_VirtualSchemaProposal_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_VirtualSchemaProposal_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_VirtualSchemaProposal_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message VirtualSchemaProposal at list field Executors as it is not of Message kind"))
}

func (x *_VirtualSchemaProposal_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_VirtualSchemaProposal_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_VirtualSchemaProposal_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_VirtualSchemaProposal                 protoreflect.MessageDescriptor
	fd_VirtualSchemaProposal_id              protoreflect.FieldDescriptor
	fd_VirtualSchemaProposal_proposalType    protoreflect.FieldDescriptor
	fd_VirtualSchemaProposal_virtualSchema   protoreflect.FieldDescriptor
	fd_VirtualSchemaProposal_actions         protoreflect.FieldDescriptor
	fd_VirtualSchemaProposal_executors       protoreflect.FieldDescriptor
	fd_VirtualSchemaProposal_submitTime      protoreflect.FieldDescriptor
	fd_VirtualSchemaProposal_votingStartTime protoreflect.FieldDescriptor
	fd_VirtualSchemaProposal_votingEndTime   protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftmngr_virtual_schema_proto_init()
	md_VirtualSchemaProposal = File_sixprotocol_nftmngr_virtual_schema_proto.Messages().ByName("VirtualSchemaProposal")
	fd_VirtualSchemaProposal_id = md_VirtualSchemaProposal.Fields().ByName("id")
	fd_VirtualSchemaProposal_proposalType = md_VirtualSchemaProposal.Fields().ByName("proposalType")
	fd_VirtualSchemaProposal_virtualSchema = md_VirtualSchemaProposal.Fields().ByName("virtualSchema")
	fd_VirtualSchemaProposal_actions = md_VirtualSchemaProposal.Fields().ByName("actions")
	fd_VirtualSchemaProposal_executors = md_VirtualSchemaProposal.Fields().ByName("executors")
	fd_VirtualSchemaProposal_submitTime = md_VirtualSchemaProposal.Fields().ByName("submitTime")
	fd_VirtualSchemaProposal_votingStartTime = md_VirtualSchemaProposal.Fields().ByName("votingStartTime")
	fd_VirtualSchemaProposal_votingEndTime = md_VirtualSchemaProposal.Fields().ByName("votingEndTime")
}

var _ protoreflect.Message = (*fastReflection_VirtualSchemaProposal)(nil)

type fastReflection_VirtualSchemaProposal VirtualSchemaProposal

func (x *VirtualSchemaProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VirtualSchemaProposal)(x)
}

func (x *VirtualSchemaProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VirtualSchemaProposal_messageType fastReflection_VirtualSchemaProposal_messageType
var _ protoreflect.MessageType = fastReflection_VirtualSchemaProposal_messageType{}

type fastReflection_VirtualSchemaProposal_messageType struct{}

func (x fastReflection_VirtualSchemaProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VirtualSchemaProposal)(nil)
}
func (x fastReflection_VirtualSchemaProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_VirtualSchemaProposal)
}
func (x fastReflection_VirtualSchemaProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchemaProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VirtualSchemaProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchemaProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VirtualSchemaProposal) Type() protoreflect.MessageType {
	return _fastReflection_VirtualSchemaProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VirtualSchemaProposal) New() protoreflect.Message {
	return new(fastReflection_VirtualSchemaProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VirtualSchemaProposal) Interface() protoreflect.ProtoMessage {
	return (*VirtualSchemaProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VirtualSchemaProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_VirtualSchemaProposal_id, value) {
			return
		}
	}
	if x.ProposalType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.ProposalType))
		if !f(fd_VirtualSchemaProposal_proposalType, value) {
			return
		}
	}
	if x.VirtualSchema != nil {
		value := protoreflect.ValueOfMessage(x.VirtualSchema.ProtoReflect())
		if !f(fd_VirtualSchemaProposal_virtualSchema, value) {
			return
		}
	}
	if len(x.Actions) != 0 {
		value := protoreflect.ValueOfList(&_VirtualSchemaProposal_4_list{list: &x.Actions})
		if !f(fd_VirtualSchemaProposal_actions, value) {
			return
		}
	}
	if len(x.Executors) != 0 {
		value := protoreflect.ValueOfList(&_VirtualSchemaProposal_5_list{list: &x.Executors})
		if !f(fd_VirtualSchemaProposal_executors, value) {
			return
		}
	}
	if x.SubmitTime != nil {
		value := protoreflect.ValueOfMessage(x.SubmitTime.ProtoReflect())
		if !f(fd_VirtualSchemaProposal_submitTime, value) {
			return
		}
	}
	if x.VotingStartTime != nil {
		value := protoreflect.ValueOfMessage(x.VotingStartTime.ProtoReflect())
		if !f(fd_VirtualSchemaProposal_votingStartTime, value) {
			return
		}
	}
	if x.VotingEndTime != nil {
		value := protoreflect.ValueOfMessage(x.VotingEndTime.ProtoReflect())
		if !f(fd_VirtualSchemaProposal_votingEndTime, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VirtualSchemaProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposal.id":
		return x.Id != ""
	case "sixprotocol.nftmngr.VirtualSchemaProposal.proposalType":
		return x.ProposalType != 0
	case "sixprotocol.nftmngr.VirtualSchemaProposal.virtualSchema":
		return x.VirtualSchema != nil
	case "sixprotocol.nftmngr.VirtualSchemaProposal.actions":
		return len(x.Actions) != 0
	case "sixprotocol.nftmngr.VirtualSchemaProposal.executors":
		return len(x.Executors) != 0
	case "sixprotocol.nftmngr.VirtualSchemaProposal.submitTime":
		return x.SubmitTime != nil
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingStartTime":
		return x.VotingStartTime != nil
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingEndTime":
		return x.VotingEndTime != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposal.id":
		x.Id = ""
	case "sixprotocol.nftmngr.VirtualSchemaProposal.proposalType":
		x.ProposalType = 0
	case "sixprotocol.nftmngr.VirtualSchemaProposal.virtualSchema":
		x.VirtualSchema = nil
	case "sixprotocol.nftmngr.VirtualSchemaProposal.actions":
		x.Actions = nil
	case "sixprotocol.nftmngr.VirtualSchemaProposal.executors":
		x.Executors = nil
	case "sixprotocol.nftmngr.VirtualSchemaProposal.submitTime":
		x.SubmitTime = nil
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingStartTime":
		x.VotingStartTime = nil
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingEndTime":
		x.VotingEndTime = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VirtualSchemaProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposal.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.proposalType":
		value := x.ProposalType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "sixprotocol.nftmngr.VirtualSchemaProposal.virtualSchema":
		value := x.VirtualSchema
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.actions":
		if len(x.Actions) == 0 {
			return protoreflect.ValueOfList(&_VirtualSchemaProposal_4_list{})
		}
		listValue := &_VirtualSchemaProposal_4_list{list: &x.Actions}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.executors":
		if len(x.Executors) == 0 {
			return protoreflect.ValueOfList(&_VirtualSchemaProposal_5_list{})
		}
		listValue := &_VirtualSchemaProposal_5_list{list: &x.Executors}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.submitTime":
		value := x.SubmitTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingStartTime":
		value := x.VotingStartTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingEndTime":
		value := x.VotingEndTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposal.id":
		x.Id = value.Interface().(string)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.proposalType":
		x.ProposalType = (ProposalType)(value.Enum())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.virtualSchema":
		x.VirtualSchema = value.Message().Interface().(*VirtualSchema)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.actions":
		lv := value.List()
		clv := lv.(*_VirtualSchemaProposal_4_list)
		x.Actions = *clv.list
	case "sixprotocol.nftmngr.VirtualSchemaProposal.executors":
		lv := value.List()
		clv := lv.(*_VirtualSchemaProposal_5_list)
		x.Executors = *clv.list
	case "sixprotocol.nftmngr.VirtualSchemaProposal.submitTime":
		x.SubmitTime = value.Message().Interface().(*timestamppb.Timestamp)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingStartTime":
		x.VotingStartTime = value.Message().Interface().(*timestamppb.Timestamp)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingEndTime":
		x.VotingEndTime = value.Message().Interface().(*timestamppb.Timestamp)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposal.virtualSchema":
		if x.VirtualSchema == nil {
			x.VirtualSchema = new(VirtualSchema)
		}
		return protoreflect.ValueOfMessage(x.VirtualSchema.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.actions":
		if x.Actions == nil {
			x.Actions = []*Action{}
		}
		value := &_VirtualSchemaProposal_4_list{list: &x.Actions}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.executors":
		if x.Executors == nil {
			x.Executors = []string{}
		}
		value := &_VirtualSchemaProposal_5_list{list: &x.Executors}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.submitTime":
		if x.SubmitTime == nil {
			x.SubmitTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.SubmitTime.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingStartTime":
		if x.VotingStartTime == nil {
			x.VotingStartTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.VotingStartTime.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingEndTime":
		if x.VotingEndTime == nil {
			x.VotingEndTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.VotingEndTime.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.id":
		panic(fmt.Errorf("field id of message sixprotocol.nftmngr.VirtualSchemaProposal is not mutable"))
	case "sixprotocol.nftmngr.VirtualSchemaProposal.proposalType":
		panic(fmt.Errorf("field proposalType of message sixprotocol.nftmngr.VirtualSchemaProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VirtualSchemaProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposal.id":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftmngr.VirtualSchemaProposal.proposalType":
		return protoreflect.ValueOfEnum(0)
	case "sixprotocol.nftmngr.VirtualSchemaProposal.virtualSchema":
		m := new(VirtualSchema)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.actions":
		list := []*Action{}
		return protoreflect.ValueOfList(&_VirtualSchemaProposal_4_list{list: &list})
	case "sixprotocol.nftmngr.VirtualSchemaProposal.executors":
		list := []string{}
		return protoreflect.ValueOfList(&_VirtualSchemaProposal_5_list{list: &list})
	case "sixprotocol.nftmngr.VirtualSchemaProposal.submitTime":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingStartTime":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sixprotocol.nftmngr.VirtualSchemaProposal.votingEndTime":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VirtualSchemaProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftmngr.VirtualSchemaProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VirtualSchemaProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VirtualSchemaProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VirtualSchemaProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VirtualSchemaProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProposalType != 0 {
			n += 1 + runtime.Sov(uint64(x.ProposalType))
		}
		if x.VirtualSchema != nil {
			l = options.Size(x.VirtualSchema)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Actions) > 0 {
			for _, e := range x.Actions {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Executors) > 0 {
			for _, s := range x.Executors {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.SubmitTime != nil {
			l = options.Size(x.SubmitTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VotingStartTime != nil {
			l = options.Size(x.VotingStartTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VotingEndTime != nil {
			l = options.Size(x.VotingEndTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchemaProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.VotingEndTime != nil {
			encoded, err := options.Marshal(x.VotingEndTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if x.VotingStartTime != nil {
			encoded, err := options.Marshal(x.VotingStartTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if x.SubmitTime != nil {
			encoded, err := options.Marshal(x.SubmitTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Executors) > 0 {
			for iNdEx := len(x.Executors) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Executors[iNdEx])
				copy(dAtA[i:], x.Executors[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Executors[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.Actions) > 0 {
			for iNdEx := len(x.Actions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Actions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.VirtualSchema != nil {
			encoded, err := options.Marshal(x.VirtualSchema)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.ProposalType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProposalType))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchemaProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchemaProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchemaProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProposalType", wireType)
				}
				x.ProposalType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProposalType |= ProposalType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VirtualSchema", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VirtualSchema == nil {
					x.VirtualSchema = &VirtualSchema{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VirtualSchema); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Actions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Actions = append(x.Actions, &Action{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Actions[len(x.Actions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Executors", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Executors = append(x.Executors, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubmitTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.SubmitTime == nil {
					x.SubmitTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SubmitTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VotingStartTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VotingStartTime == nil {
					x.VotingStartTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VotingStartTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VotingEndTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VotingEndTime == nil {
					x.VotingEndTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VotingEndTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_VirtualSchemaProposalRequest_2_list)(nil)

type _VirtualSchemaProposalRequest_2_list struct {
	list *[]string
}

func (x *_VirtualSchemaProposalRequest_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VirtualSchemaProposalRequest_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_VirtualSchemaProposalRequest_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_VirtualSchemaProposalRequest_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_VirtualSchemaProposalRequest_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message VirtualSchemaProposalRequest at list field VirtualSchemaRegistry as it is not of Message kind"))
}

func (x *_VirtualSchemaProposalRequest_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_VirtualSchemaProposalRequest_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_VirtualSchemaProposalRequest_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_VirtualSchemaProposalRequest_3_list)(nil)

type _VirtualSchemaProposalRequest_3_list struct {
	list *[]*Action
}

func (x *_VirtualSchemaProposalRequest_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VirtualSchemaProposalRequest_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_VirtualSchemaProposalRequest_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Action)
	(*x.list)[i] = concreteValue
}

func (x *_VirtualSchemaProposalRequest_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Action)
	*x.list = append(*x.list, concreteValue)
}

func (x *_VirtualSchemaProposalRequest_3_list) AppendMutable() protoreflect.Value {
	v := new(Action)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_VirtualSchemaProposalRequest_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_VirtualSchemaProposalRequest_3_list) NewElement() protoreflect.Value {
	v := new(Action)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_VirtualSchemaProposalRequest_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_VirtualSchemaProposalRequest_4_list)(nil)

type _VirtualSchemaProposalRequest_4_list struct {
	list *[]string
}

func (x *_VirtualSchemaProposalRequest_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VirtualSchemaProposalRequest_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_VirtualSchemaProposalRequest_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_VirtualSchemaProposalRequest_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_VirtualSchemaProposalRequest_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message VirtualSchemaProposalRequest at list field Executors as it is not of Message kind"))
}

func (x *_VirtualSchemaProposalRequest_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_VirtualSchemaProposalRequest_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_VirtualSchemaProposalRequest_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_VirtualSchemaProposalRequest                       protoreflect.MessageDescriptor
	fd_VirtualSchemaProposalRequest_virtualSchemaCode     protoreflect.FieldDescriptor
	fd_VirtualSchemaProposalRequest_virtualSchemaRegistry protoreflect.FieldDescriptor
	fd_VirtualSchemaProposalRequest_actions               protoreflect.FieldDescriptor
	fd_VirtualSchemaProposalRequest_executors             protoreflect.FieldDescriptor
	fd_VirtualSchemaProposalRequest_enable                protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftmngr_virtual_schema_proto_init()
	md_VirtualSchemaProposalRequest = File_sixprotocol_nftmngr_virtual_schema_proto.Messages().ByName("VirtualSchemaProposalRequest")
	fd_VirtualSchemaProposalRequest_virtualSchemaCode = md_VirtualSchemaProposalRequest.Fields().ByName("virtualSchemaCode")
	fd_VirtualSchemaProposalRequest_virtualSchemaRegistry = md_VirtualSchemaProposalRequest.Fields().ByName("virtualSchemaRegistry")
	fd_VirtualSchemaProposalRequest_actions = md_VirtualSchemaProposalRequest.Fields().ByName("actions")
	fd_VirtualSchemaProposalRequest_executors = md_VirtualSchemaProposalRequest.Fields().ByName("executors")
	fd_VirtualSchemaProposalRequest_enable = md_VirtualSchemaProposalRequest.Fields().ByName("enable")
}

var _ protoreflect.Message = (*fastReflection_VirtualSchemaProposalRequest)(nil)

type fastReflection_VirtualSchemaProposalRequest VirtualSchemaProposalRequest

func (x *VirtualSchemaProposalRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VirtualSchemaProposalRequest)(x)
}

func (x *VirtualSchemaProposalRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VirtualSchemaProposalRequest_messageType fastReflection_VirtualSchemaProposalRequest_messageType
var _ protoreflect.MessageType = fastReflection_VirtualSchemaProposalRequest_messageType{}

type fastReflection_VirtualSchemaProposalRequest_messageType struct{}

func (x fastReflection_VirtualSchemaProposalRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VirtualSchemaProposalRequest)(nil)
}
func (x fastReflection_VirtualSchemaProposalRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_VirtualSchemaProposalRequest)
}
func (x fastReflection_VirtualSchemaProposalRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchemaProposalRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VirtualSchemaProposalRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchemaProposalRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VirtualSchemaProposalRequest) Type() protoreflect.MessageType {
	return _fastReflection_VirtualSchemaProposalRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VirtualSchemaProposalRequest) New() protoreflect.Message {
	return new(fastReflection_VirtualSchemaProposalRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VirtualSchemaProposalRequest) Interface() protoreflect.ProtoMessage {
	return (*VirtualSchemaProposalRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VirtualSchemaProposalRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.VirtualSchemaCode != "" {
		value := protoreflect.ValueOfString(x.VirtualSchemaCode)
		if !f(fd_VirtualSchemaProposalRequest_virtualSchemaCode, value) {
			return
		}
	}
	if len(x.VirtualSchemaRegistry) != 0 {
		value := protoreflect.ValueOfList(&_VirtualSchemaProposalRequest_2_list{list: &x.VirtualSchemaRegistry})
		if !f(fd_VirtualSchemaProposalRequest_virtualSchemaRegistry, value) {
			return
		}
	}
	if len(x.Actions) != 0 {
		value := protoreflect.ValueOfList(&_VirtualSchemaProposalRequest_3_list{list: &x.Actions})
		if !f(fd_VirtualSchemaProposalRequest_actions, value) {
			return
		}
	}
	if len(x.Executors) != 0 {
		value := protoreflect.ValueOfList(&_VirtualSchemaProposalRequest_4_list{list: &x.Executors})
		if !f(fd_VirtualSchemaProposalRequest_executors, value) {
			return
		}
	}
	if x.Enable != false {
		value := protoreflect.ValueOfBool(x.Enable)
		if !f(fd_VirtualSchemaProposalRequest_enable, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VirtualSchemaProposalRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaCode":
		return x.VirtualSchemaCode != ""
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaRegistry":
		return len(x.VirtualSchemaRegistry) != 0
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.actions":
		return len(x.Actions) != 0
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.executors":
		return len(x.Executors) != 0
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.enable":
		return x.Enable != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposalRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposalRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaProposalRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaCode":
		x.VirtualSchemaCode = ""
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaRegistry":
		x.VirtualSchemaRegistry = nil
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.actions":
		x.Actions = nil
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.executors":
		x.Executors = nil
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.enable":
		x.Enable = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposalRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposalRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VirtualSchemaProposalRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaCode":
		value := x.VirtualSchemaCode
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaRegistry":
		if len(x.VirtualSchemaRegistry) == 0 {
			return protoreflect.ValueOfList(&_VirtualSchemaProposalRequest_2_list{})
		}
		listValue := &_VirtualSchemaProposalRequest_2_list{list: &x.VirtualSchemaRegistry}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.actions":
		if len(x.Actions) == 0 {
			return protoreflect.ValueOfList(&_VirtualSchemaProposalRequest_3_list{})
		}
		listValue := &_VirtualSchemaProposalRequest_3_list{list: &x.Actions}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.executors":
		if len(x.Executors) == 0 {
			return protoreflect.ValueOfList(&_VirtualSchemaProposalRequest_4_list{})
		}
		listValue := &_VirtualSchemaProposalRequest_4_list{list: &x.Executors}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.enable":
		value := x.Enable
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposalRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposalRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaProposalRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaCode":
		x.VirtualSchemaCode = value.Interface().(string)
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaRegistry":
		lv := value.List()
		clv := lv.(*_VirtualSchemaProposalRequest_2_list)
		x.VirtualSchemaRegistry = *clv.list
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.actions":
		lv := value.List()
		clv := lv.(*_VirtualSchemaProposalRequest_3_list)
		x.Actions = *clv.list
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.executors":
		lv := value.List()
		clv := lv.(*_VirtualSchemaProposalRequest_4_list)
		x.Executors = *clv.list
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.enable":
		x.Enable = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposalRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposalRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaProposalRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaRegistry":
		if x.VirtualSchemaRegistry == nil {
			x.VirtualSchemaRegistry = []string{}
		}
		value := &_VirtualSchemaProposalRequest_2_list{list: &x.VirtualSchemaRegistry}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.actions":
		if x.Actions == nil {
			x.Actions = []*Action{}
		}
		value := &_VirtualSchemaProposalRequest_3_list{list: &x.Actions}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.executors":
		if x.Executors == nil {
			x.Executors = []string{}
		}
		value := &_VirtualSchemaProposalRequest_4_list{list: &x.Executors}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaCode":
		panic(fmt.Errorf("field virtualSchemaCode of message sixprotocol.nftmngr.VirtualSchemaProposalRequest is not mutable"))
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.enable":
		panic(fmt.Errorf("field enable of message sixprotocol.nftmngr.VirtualSchemaProposalRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposalRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposalRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VirtualSchemaProposalRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaCode":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.virtualSchemaRegistry":
		list := []string{}
		return protoreflect.ValueOfList(&_VirtualSchemaProposalRequest_2_list{list: &list})
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.actions":
		list := []*Action{}
		return protoreflect.ValueOfList(&_VirtualSchemaProposalRequest_3_list{list: &list})
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.executors":
		list := []string{}
		return protoreflect.ValueOfList(&_VirtualSchemaProposalRequest_4_list{list: &list})
	case "sixprotocol.nftmngr.VirtualSchemaProposalRequest.enable":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaProposalRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaProposalRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VirtualSchemaProposalRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftmngr.VirtualSchemaProposalRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VirtualSchemaProposalRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaProposalRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VirtualSchemaProposalRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VirtualSchemaProposalRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VirtualSchemaProposalRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.VirtualSchemaCode)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.VirtualSchemaRegistry) > 0 {
			for _, s := range x.VirtualSchemaRegistry {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Actions) > 0 {
			for _, e := range x.Actions {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Executors) > 0 {
			for _, s := range x.Executors {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Enable {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchemaProposalRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Enable {
			i--
			if x.Enable {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if len(x.Executors) > 0 {
			for iNdEx := len(x.Executors) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Executors[iNdEx])
				copy(dAtA[i:], x.Executors[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Executors[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Actions) > 0 {
			for iNdEx := len(x.Actions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Actions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.VirtualSchemaRegistry) > 0 {
			for iNdEx := len(x.VirtualSchemaRegistry) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.VirtualSchemaRegistry[iNdEx])
				copy(dAtA[i:], x.VirtualSchemaRegistry[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VirtualSchemaRegistry[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.VirtualSchemaCode) > 0 {
			i -= len(x.VirtualSchemaCode)
			copy(dAtA[i:], x.VirtualSchemaCode)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VirtualSchemaCode)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchemaProposalRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchemaProposalRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchemaProposalRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VirtualSchemaCode", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VirtualSchemaCode = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VirtualSchemaRegistry", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VirtualSchemaRegistry = append(x.VirtualSchemaRegistry, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Actions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Actions = append(x.Actions, &Action{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Actions[len(x.Actions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Executors", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Executors = append(x.Executors, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Enable = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_VirtualSchema_2_list)(nil)

type _VirtualSchema_2_list struct {
	list *[]*VirtualSchemaRegistry
}

func (x *_VirtualSchema_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VirtualSchema_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_VirtualSchema_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualSchemaRegistry)
	(*x.list)[i] = concreteValue
}

func (x *_VirtualSchema_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VirtualSchemaRegistry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_VirtualSchema_2_list) AppendMutable() protoreflect.Value {
	v := new(VirtualSchemaRegistry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_VirtualSchema_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_VirtualSchema_2_list) NewElement() protoreflect.Value {
	v := new(VirtualSchemaRegistry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_VirtualSchema_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_VirtualSchema                      protoreflect.MessageDescriptor
	fd_VirtualSchema_virtualNftSchemaCode protoreflect.FieldDescriptor
	fd_VirtualSchema_registry             protoreflect.FieldDescriptor
	fd_VirtualSchema_enable               protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftmngr_virtual_schema_proto_init()
	md_VirtualSchema = File_sixprotocol_nftmngr_virtual_schema_proto.Messages().ByName("VirtualSchema")
	fd_VirtualSchema_virtualNftSchemaCode = md_VirtualSchema.Fields().ByName("virtualNftSchemaCode")
	fd_VirtualSchema_registry = md_VirtualSchema.Fields().ByName("registry")
	fd_VirtualSchema_enable = md_VirtualSchema.Fields().ByName("enable")
}

var _ protoreflect.Message = (*fastReflection_VirtualSchema)(nil)

type fastReflection_VirtualSchema VirtualSchema

func (x *VirtualSchema) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VirtualSchema)(x)
}

func (x *VirtualSchema) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VirtualSchema_messageType fastReflection_VirtualSchema_messageType
var _ protoreflect.MessageType = fastReflection_VirtualSchema_messageType{}

type fastReflection_VirtualSchema_messageType struct{}

func (x fastReflection_VirtualSchema_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VirtualSchema)(nil)
}
func (x fastReflection_VirtualSchema_messageType) New() protoreflect.Message {
	return new(fastReflection_VirtualSchema)
}
func (x fastReflection_VirtualSchema_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchema
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VirtualSchema) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchema
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VirtualSchema) Type() protoreflect.MessageType {
	return _fastReflection_VirtualSchema_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VirtualSchema) New() protoreflect.Message {
	return new(fastReflection_VirtualSchema)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VirtualSchema) Interface() protoreflect.ProtoMessage {
	return (*VirtualSchema)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VirtualSchema) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.VirtualNftSchemaCode != "" {
		value := protoreflect.ValueOfString(x.VirtualNftSchemaCode)
		if !f(fd_VirtualSchema_virtualNftSchemaCode, value) {
			return
		}
	}
	if len(x.Registry) != 0 {
		value := protoreflect.ValueOfList(&_VirtualSchema_2_list{list: &x.Registry})
		if !f(fd_VirtualSchema_registry, value) {
			return
		}
	}
	if x.Enable != false {
		value := protoreflect.ValueOfBool(x.Enable)
		if !f(fd_VirtualSchema_enable, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VirtualSchema) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchema.virtualNftSchemaCode":
		return x.VirtualNftSchemaCode != ""
	case "sixprotocol.nftmngr.VirtualSchema.registry":
		return len(x.Registry) != 0
	case "sixprotocol.nftmngr.VirtualSchema.enable":
		return x.Enable != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchema"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchema does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchema) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchema.virtualNftSchemaCode":
		x.VirtualNftSchemaCode = ""
	case "sixprotocol.nftmngr.VirtualSchema.registry":
		x.Registry = nil
	case "sixprotocol.nftmngr.VirtualSchema.enable":
		x.Enable = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchema"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchema does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VirtualSchema) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftmngr.VirtualSchema.virtualNftSchemaCode":
		value := x.VirtualNftSchemaCode
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftmngr.VirtualSchema.registry":
		if len(x.Registry) == 0 {
			return protoreflect.ValueOfList(&_VirtualSchema_2_list{})
		}
		listValue := &_VirtualSchema_2_list{list: &x.Registry}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftmngr.VirtualSchema.enable":
		value := x.Enable
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchema"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchema does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchema) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchema.virtualNftSchemaCode":
		x.VirtualNftSchemaCode = value.Interface().(string)
	case "sixprotocol.nftmngr.VirtualSchema.registry":
		lv := value.List()
		clv := lv.(*_VirtualSchema_2_list)
		x.Registry = *clv.list
	case "sixprotocol.nftmngr.VirtualSchema.enable":
		x.Enable = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchema"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchema does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchema) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchema.registry":
		if x.Registry == nil {
			x.Registry = []*VirtualSchemaRegistry{}
		}
		value := &_VirtualSchema_2_list{list: &x.Registry}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftmngr.VirtualSchema.virtualNftSchemaCode":
		panic(fmt.Errorf("field virtualNftSchemaCode of message sixprotocol.nftmngr.VirtualSchema is not mutable"))
	case "sixprotocol.nftmngr.VirtualSchema.enable":
		panic(fmt.Errorf("field enable of message sixprotocol.nftmngr.VirtualSchema is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchema"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchema does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VirtualSchema) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchema.virtualNftSchemaCode":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftmngr.VirtualSchema.registry":
		list := []*VirtualSchemaRegistry{}
		return protoreflect.ValueOfList(&_VirtualSchema_2_list{list: &list})
	case "sixprotocol.nftmngr.VirtualSchema.enable":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchema"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchema does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VirtualSchema) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftmngr.VirtualSchema", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VirtualSchema) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchema) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VirtualSchema) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VirtualSchema) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VirtualSchema)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.VirtualNftSchemaCode)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Registry) > 0 {
			for _, e := range x.Registry {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Enable {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchema)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Enable {
			i--
			if x.Enable {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if len(x.Registry) > 0 {
			for iNdEx := len(x.Registry) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Registry[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.VirtualNftSchemaCode) > 0 {
			i -= len(x.VirtualNftSchemaCode)
			copy(dAtA[i:], x.VirtualNftSchemaCode)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VirtualNftSchemaCode)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchema)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchema: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchema: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VirtualNftSchemaCode", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VirtualNftSchemaCode = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Registry", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Registry = append(x.Registry, &VirtualSchemaRegistry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Registry[len(x.Registry)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Enable = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_VirtualSchemaRegistry               protoreflect.MessageDescriptor
	fd_VirtualSchemaRegistry_nftSchemaCode protoreflect.FieldDescriptor
	fd_VirtualSchemaRegistry_decision      protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftmngr_virtual_schema_proto_init()
	md_VirtualSchemaRegistry = File_sixprotocol_nftmngr_virtual_schema_proto.Messages().ByName("VirtualSchemaRegistry")
	fd_VirtualSchemaRegistry_nftSchemaCode = md_VirtualSchemaRegistry.Fields().ByName("nftSchemaCode")
	fd_VirtualSchemaRegistry_decision = md_VirtualSchemaRegistry.Fields().ByName("decision")
}

var _ protoreflect.Message = (*fastReflection_VirtualSchemaRegistry)(nil)

type fastReflection_VirtualSchemaRegistry VirtualSchemaRegistry

func (x *VirtualSchemaRegistry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VirtualSchemaRegistry)(x)
}

func (x *VirtualSchemaRegistry) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VirtualSchemaRegistry_messageType fastReflection_VirtualSchemaRegistry_messageType
var _ protoreflect.MessageType = fastReflection_VirtualSchemaRegistry_messageType{}

type fastReflection_VirtualSchemaRegistry_messageType struct{}

func (x fastReflection_VirtualSchemaRegistry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VirtualSchemaRegistry)(nil)
}
func (x fastReflection_VirtualSchemaRegistry_messageType) New() protoreflect.Message {
	return new(fastReflection_VirtualSchemaRegistry)
}
func (x fastReflection_VirtualSchemaRegistry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchemaRegistry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VirtualSchemaRegistry) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchemaRegistry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VirtualSchemaRegistry) Type() protoreflect.MessageType {
	return _fastReflection_VirtualSchemaRegistry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VirtualSchemaRegistry) New() protoreflect.Message {
	return new(fastReflection_VirtualSchemaRegistry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VirtualSchemaRegistry) Interface() protoreflect.ProtoMessage {
	return (*VirtualSchemaRegistry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VirtualSchemaRegistry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NftSchemaCode != "" {
		value := protoreflect.ValueOfString(x.NftSchemaCode)
		if !f(fd_VirtualSchemaRegistry_nftSchemaCode, value) {
			return
		}
	}
	if x.Decision != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Decision))
		if !f(fd_VirtualSchemaRegistry_decision, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VirtualSchemaRegistry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.nftSchemaCode":
		return x.NftSchemaCode != ""
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.decision":
		return x.Decision != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistry"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaRegistry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.nftSchemaCode":
		x.NftSchemaCode = ""
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.decision":
		x.Decision = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistry"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VirtualSchemaRegistry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.nftSchemaCode":
		value := x.NftSchemaCode
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.decision":
		value := x.Decision
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistry"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaRegistry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.nftSchemaCode":
		x.NftSchemaCode = value.Interface().(string)
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.decision":
		x.Decision = (RegistryStatus)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistry"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaRegistry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.nftSchemaCode":
		panic(fmt.Errorf("field nftSchemaCode of message sixprotocol.nftmngr.VirtualSchemaRegistry is not mutable"))
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.decision":
		panic(fmt.Errorf("field decision of message sixprotocol.nftmngr.VirtualSchemaRegistry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistry"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VirtualSchemaRegistry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.nftSchemaCode":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftmngr.VirtualSchemaRegistry.decision":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistry"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VirtualSchemaRegistry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftmngr.VirtualSchemaRegistry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VirtualSchemaRegistry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaRegistry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VirtualSchemaRegistry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VirtualSchemaRegistry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VirtualSchemaRegistry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.NftSchemaCode)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Decision != 0 {
			n += 1 + runtime.Sov(uint64(x.Decision))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchemaRegistry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Decision != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Decision))
			i--
			dAtA[i] = 0x10
		}
		if len(x.NftSchemaCode) > 0 {
			i -= len(x.NftSchemaCode)
			copy(dAtA[i:], x.NftSchemaCode)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NftSchemaCode)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchemaRegistry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchemaRegistry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchemaRegistry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftSchemaCode", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NftSchemaCode = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decision", wireType)
				}
				x.Decision = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Decision |= RegistryStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_VirtualSchemaRegistryRequest               protoreflect.MessageDescriptor
	fd_VirtualSchemaRegistryRequest_nftSchemaCode protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftmngr_virtual_schema_proto_init()
	md_VirtualSchemaRegistryRequest = File_sixprotocol_nftmngr_virtual_schema_proto.Messages().ByName("VirtualSchemaRegistryRequest")
	fd_VirtualSchemaRegistryRequest_nftSchemaCode = md_VirtualSchemaRegistryRequest.Fields().ByName("nftSchemaCode")
}

var _ protoreflect.Message = (*fastReflection_VirtualSchemaRegistryRequest)(nil)

type fastReflection_VirtualSchemaRegistryRequest VirtualSchemaRegistryRequest

func (x *VirtualSchemaRegistryRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VirtualSchemaRegistryRequest)(x)
}

func (x *VirtualSchemaRegistryRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VirtualSchemaRegistryRequest_messageType fastReflection_VirtualSchemaRegistryRequest_messageType
var _ protoreflect.MessageType = fastReflection_VirtualSchemaRegistryRequest_messageType{}

type fastReflection_VirtualSchemaRegistryRequest_messageType struct{}

func (x fastReflection_VirtualSchemaRegistryRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VirtualSchemaRegistryRequest)(nil)
}
func (x fastReflection_VirtualSchemaRegistryRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_VirtualSchemaRegistryRequest)
}
func (x fastReflection_VirtualSchemaRegistryRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchemaRegistryRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VirtualSchemaRegistryRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_VirtualSchemaRegistryRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VirtualSchemaRegistryRequest) Type() protoreflect.MessageType {
	return _fastReflection_VirtualSchemaRegistryRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VirtualSchemaRegistryRequest) New() protoreflect.Message {
	return new(fastReflection_VirtualSchemaRegistryRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VirtualSchemaRegistryRequest) Interface() protoreflect.ProtoMessage {
	return (*VirtualSchemaRegistryRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VirtualSchemaRegistryRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NftSchemaCode != "" {
		value := protoreflect.ValueOfString(x.NftSchemaCode)
		if !f(fd_VirtualSchemaRegistryRequest_nftSchemaCode, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VirtualSchemaRegistryRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistryRequest.nftSchemaCode":
		return x.NftSchemaCode != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistryRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistryRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaRegistryRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistryRequest.nftSchemaCode":
		x.NftSchemaCode = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistryRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistryRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VirtualSchemaRegistryRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistryRequest.nftSchemaCode":
		value := x.NftSchemaCode
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistryRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistryRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaRegistryRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistryRequest.nftSchemaCode":
		x.NftSchemaCode = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistryRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistryRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaRegistryRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistryRequest.nftSchemaCode":
		panic(fmt.Errorf("field nftSchemaCode of message sixprotocol.nftmngr.VirtualSchemaRegistryRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistryRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistryRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VirtualSchemaRegistryRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.VirtualSchemaRegistryRequest.nftSchemaCode":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.VirtualSchemaRegistryRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.VirtualSchemaRegistryRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VirtualSchemaRegistryRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftmngr.VirtualSchemaRegistryRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VirtualSchemaRegistryRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VirtualSchemaRegistryRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VirtualSchemaRegistryRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VirtualSchemaRegistryRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VirtualSchemaRegistryRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.NftSchemaCode)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchemaRegistryRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.NftSchemaCode) > 0 {
			i -= len(x.NftSchemaCode)
			copy(dAtA[i:], x.NftSchemaCode)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NftSchemaCode)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VirtualSchemaRegistryRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchemaRegistryRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VirtualSchemaRegistryRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftSchemaCode", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NftSchemaCode = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ActiveVirtualSchemaProposal    protoreflect.MessageDescriptor
	fd_ActiveVirtualSchemaProposal_id protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftmngr_virtual_schema_proto_init()
	md_ActiveVirtualSchemaProposal = File_sixprotocol_nftmngr_virtual_schema_proto.Messages().ByName("ActiveVirtualSchemaProposal")
	fd_ActiveVirtualSchemaProposal_id = md_ActiveVirtualSchemaProposal.Fields().ByName("id")
}

var _ protoreflect.Message = (*fastReflection_ActiveVirtualSchemaProposal)(nil)

type fastReflection_ActiveVirtualSchemaProposal ActiveVirtualSchemaProposal

func (x *ActiveVirtualSchemaProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ActiveVirtualSchemaProposal)(x)
}

func (x *ActiveVirtualSchemaProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ActiveVirtualSchemaProposal_messageType fastReflection_ActiveVirtualSchemaProposal_messageType
var _ protoreflect.MessageType = fastReflection_ActiveVirtualSchemaProposal_messageType{}

type fastReflection_ActiveVirtualSchemaProposal_messageType struct{}

func (x fastReflection_ActiveVirtualSchemaProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ActiveVirtualSchemaProposal)(nil)
}
func (x fastReflection_ActiveVirtualSchemaProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_ActiveVirtualSchemaProposal)
}
func (x fastReflection_ActiveVirtualSchemaProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ActiveVirtualSchemaProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ActiveVirtualSchemaProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_ActiveVirtualSchemaProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ActiveVirtualSchemaProposal) Type() protoreflect.MessageType {
	return _fastReflection_ActiveVirtualSchemaProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ActiveVirtualSchemaProposal) New() protoreflect.Message {
	return new(fastReflection_ActiveVirtualSchemaProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ActiveVirtualSchemaProposal) Interface() protoreflect.ProtoMessage {
	return (*ActiveVirtualSchemaProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ActiveVirtualSchemaProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_ActiveVirtualSchemaProposal_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ActiveVirtualSchemaProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.ActiveVirtualSchemaProposal.id":
		return x.Id != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.ActiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.ActiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActiveVirtualSchemaProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.ActiveVirtualSchemaProposal.id":
		x.Id = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.ActiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.ActiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ActiveVirtualSchemaProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftmngr.ActiveVirtualSchemaProposal.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.ActiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.ActiveVirtualSchemaProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActiveVirtualSchemaProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.ActiveVirtualSchemaProposal.id":
		x.Id = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.ActiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.ActiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActiveVirtualSchemaProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.ActiveVirtualSchemaProposal.id":
		panic(fmt.Errorf("field id of message sixprotocol.nftmngr.ActiveVirtualSchemaProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.ActiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.ActiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ActiveVirtualSchemaProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.ActiveVirtualSchemaProposal.id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.ActiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.ActiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ActiveVirtualSchemaProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftmngr.ActiveVirtualSchemaProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ActiveVirtualSchemaProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActiveVirtualSchemaProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ActiveVirtualSchemaProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ActiveVirtualSchemaProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ActiveVirtualSchemaProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ActiveVirtualSchemaProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ActiveVirtualSchemaProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActiveVirtualSchemaProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActiveVirtualSchemaProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_InactiveVirtualSchemaProposal    protoreflect.MessageDescriptor
	fd_InactiveVirtualSchemaProposal_id protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftmngr_virtual_schema_proto_init()
	md_InactiveVirtualSchemaProposal = File_sixprotocol_nftmngr_virtual_schema_proto.Messages().ByName("InactiveVirtualSchemaProposal")
	fd_InactiveVirtualSchemaProposal_id = md_InactiveVirtualSchemaProposal.Fields().ByName("id")
}

var _ protoreflect.Message = (*fastReflection_InactiveVirtualSchemaProposal)(nil)

type fastReflection_InactiveVirtualSchemaProposal InactiveVirtualSchemaProposal

func (x *InactiveVirtualSchemaProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_InactiveVirtualSchemaProposal)(x)
}

func (x *InactiveVirtualSchemaProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_InactiveVirtualSchemaProposal_messageType fastReflection_InactiveVirtualSchemaProposal_messageType
var _ protoreflect.MessageType = fastReflection_InactiveVirtualSchemaProposal_messageType{}

type fastReflection_InactiveVirtualSchemaProposal_messageType struct{}

func (x fastReflection_InactiveVirtualSchemaProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_InactiveVirtualSchemaProposal)(nil)
}
func (x fastReflection_InactiveVirtualSchemaProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_InactiveVirtualSchemaProposal)
}
func (x fastReflection_InactiveVirtualSchemaProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_InactiveVirtualSchemaProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_InactiveVirtualSchemaProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_InactiveVirtualSchemaProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_InactiveVirtualSchemaProposal) Type() protoreflect.MessageType {
	return _fastReflection_InactiveVirtualSchemaProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_InactiveVirtualSchemaProposal) New() protoreflect.Message {
	return new(fastReflection_InactiveVirtualSchemaProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_InactiveVirtualSchemaProposal) Interface() protoreflect.ProtoMessage {
	return (*InactiveVirtualSchemaProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_InactiveVirtualSchemaProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_InactiveVirtualSchemaProposal_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_InactiveVirtualSchemaProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.InactiveVirtualSchemaProposal.id":
		return x.Id != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.InactiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.InactiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InactiveVirtualSchemaProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.InactiveVirtualSchemaProposal.id":
		x.Id = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.InactiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.InactiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_InactiveVirtualSchemaProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftmngr.InactiveVirtualSchemaProposal.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.InactiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.InactiveVirtualSchemaProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InactiveVirtualSchemaProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.InactiveVirtualSchemaProposal.id":
		x.Id = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.InactiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.InactiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InactiveVirtualSchemaProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.InactiveVirtualSchemaProposal.id":
		panic(fmt.Errorf("field id of message sixprotocol.nftmngr.InactiveVirtualSchemaProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.InactiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.InactiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_InactiveVirtualSchemaProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftmngr.InactiveVirtualSchemaProposal.id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftmngr.InactiveVirtualSchemaProposal"))
		}
		panic(fmt.Errorf("message sixprotocol.nftmngr.InactiveVirtualSchemaProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_InactiveVirtualSchemaProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftmngr.InactiveVirtualSchemaProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_InactiveVirtualSchemaProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InactiveVirtualSchemaProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_InactiveVirtualSchemaProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_InactiveVirtualSchemaProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*InactiveVirtualSchemaProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*InactiveVirtualSchemaProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*InactiveVirtualSchemaProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InactiveVirtualSchemaProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InactiveVirtualSchemaProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: sixprotocol/nftmngr/virtual_schema.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistryStatus int32

const (
	RegistryStatus_PENDING RegistryStatus = 0
	RegistryStatus_REJECT  RegistryStatus = 1
	RegistryStatus_ACCEPT  RegistryStatus = 2
)

// Enum value maps for RegistryStatus.
var (
	RegistryStatus_name = map[int32]string{
		0: "PENDING",
		1: "REJECT",
		2: "ACCEPT",
	}
	RegistryStatus_value = map[string]int32{
		"PENDING": 0,
		"REJECT":  1,
		"ACCEPT":  2,
	}
)

func (x RegistryStatus) Enum() *RegistryStatus {
	p := new(RegistryStatus)
	*p = x
	return p
}

func (x RegistryStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistryStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_sixprotocol_nftmngr_virtual_schema_proto_enumTypes[0].Descriptor()
}

func (RegistryStatus) Type() protoreflect.EnumType {
	return &file_sixprotocol_nftmngr_virtual_schema_proto_enumTypes[0]
}

func (x RegistryStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistryStatus.Descriptor instead.
func (RegistryStatus) EnumDescriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP(), []int{0}
}

type ProposalType int32

const (
	ProposalType_CREATE ProposalType = 0
	ProposalType_EDIT   ProposalType = 1
)

// Enum value maps for ProposalType.
var (
	ProposalType_name = map[int32]string{
		0: "CREATE",
		1: "EDIT",
	}
	ProposalType_value = map[string]int32{
		"CREATE": 0,
		"EDIT":   1,
	}
)

func (x ProposalType) Enum() *ProposalType {
	p := new(ProposalType)
	*p = x
	return p
}

func (x ProposalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProposalType) Descriptor() protoreflect.EnumDescriptor {
	return file_sixprotocol_nftmngr_virtual_schema_proto_enumTypes[1].Descriptor()
}

func (ProposalType) Type() protoreflect.EnumType {
	return &file_sixprotocol_nftmngr_virtual_schema_proto_enumTypes[1]
}

func (x ProposalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProposalType.Descriptor instead.
func (ProposalType) EnumDescriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP(), []int{1}
}

type VirtualSchemaProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProposalType    ProposalType           `protobuf:"varint,2,opt,name=proposalType,proto3,enum=sixprotocol.nftmngr.ProposalType" json:"proposalType,omitempty"`
	VirtualSchema   *VirtualSchema         `protobuf:"bytes,3,opt,name=virtualSchema,proto3" json:"virtualSchema,omitempty"`
	Actions         []*Action              `protobuf:"bytes,4,rep,name=actions,proto3" json:"actions,omitempty"`
	Executors       []string               `protobuf:"bytes,5,rep,name=executors,proto3" json:"executors,omitempty"`
	SubmitTime      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=submitTime,proto3" json:"submitTime,omitempty"`
	VotingStartTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=votingStartTime,proto3" json:"votingStartTime,omitempty"`
	VotingEndTime   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=votingEndTime,proto3" json:"votingEndTime,omitempty"`
}

func (x *VirtualSchemaProposal) Reset() {
	*x = VirtualSchemaProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualSchemaProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualSchemaProposal) ProtoMessage() {}

// Deprecated: Use VirtualSchemaProposal.ProtoReflect.Descriptor instead.
func (*VirtualSchemaProposal) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP(), []int{0}
}

func (x *VirtualSchemaProposal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VirtualSchemaProposal) GetProposalType() ProposalType {
	if x != nil {
		return x.ProposalType
	}
	return ProposalType_CREATE
}

func (x *VirtualSchemaProposal) GetVirtualSchema() *VirtualSchema {
	if x != nil {
		return x.VirtualSchema
	}
	return nil
}

func (x *VirtualSchemaProposal) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *VirtualSchemaProposal) GetExecutors() []string {
	if x != nil {
		return x.Executors
	}
	return nil
}

func (x *VirtualSchemaProposal) GetSubmitTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitTime
	}
	return nil
}

func (x *VirtualSchemaProposal) GetVotingStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.VotingStartTime
	}
	return nil
}

func (x *VirtualSchemaProposal) GetVotingEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.VotingEndTime
	}
	return nil
}

type VirtualSchemaProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualSchemaCode     string    `protobuf:"bytes,1,opt,name=virtualSchemaCode,proto3" json:"virtualSchemaCode,omitempty"`
	VirtualSchemaRegistry []string  `protobuf:"bytes,2,rep,name=virtualSchemaRegistry,proto3" json:"virtualSchemaRegistry,omitempty"`
	Actions               []*Action `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
	Executors             []string  `protobuf:"bytes,4,rep,name=executors,proto3" json:"executors,omitempty"`
	Enable                bool      `protobuf:"varint,5,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *VirtualSchemaProposalRequest) Reset() {
	*x = VirtualSchemaProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualSchemaProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualSchemaProposalRequest) ProtoMessage() {}

// Deprecated: Use VirtualSchemaProposalRequest.ProtoReflect.Descriptor instead.
func (*VirtualSchemaProposalRequest) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP(), []int{1}
}

func (x *VirtualSchemaProposalRequest) GetVirtualSchemaCode() string {
	if x != nil {
		return x.VirtualSchemaCode
	}
	return ""
}

func (x *VirtualSchemaProposalRequest) GetVirtualSchemaRegistry() []string {
	if x != nil {
		return x.VirtualSchemaRegistry
	}
	return nil
}

func (x *VirtualSchemaProposalRequest) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *VirtualSchemaProposalRequest) GetExecutors() []string {
	if x != nil {
		return x.Executors
	}
	return nil
}

func (x *VirtualSchemaProposalRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type VirtualSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualNftSchemaCode string                   `protobuf:"bytes,1,opt,name=virtualNftSchemaCode,proto3" json:"virtualNftSchemaCode,omitempty"`
	Registry             []*VirtualSchemaRegistry `protobuf:"bytes,2,rep,name=registry,proto3" json:"registry,omitempty"`
	Enable               bool                     `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"` // link wih virtual action. We will not put in here to reduce redundance info
}

func (x *VirtualSchema) Reset() {
	*x = VirtualSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualSchema) ProtoMessage() {}

// Deprecated: Use VirtualSchema.ProtoReflect.Descriptor instead.
func (*VirtualSchema) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP(), []int{2}
}

func (x *VirtualSchema) GetVirtualNftSchemaCode() string {
	if x != nil {
		return x.VirtualNftSchemaCode
	}
	return ""
}

func (x *VirtualSchema) GetRegistry() []*VirtualSchemaRegistry {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *VirtualSchema) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type VirtualSchemaRegistry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftSchemaCode string         `protobuf:"bytes,1,opt,name=nftSchemaCode,proto3" json:"nftSchemaCode,omitempty"`
	Decision      RegistryStatus `protobuf:"varint,2,opt,name=decision,proto3,enum=sixprotocol.nftmngr.RegistryStatus" json:"decision,omitempty"`
}

func (x *VirtualSchemaRegistry) Reset() {
	*x = VirtualSchemaRegistry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualSchemaRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualSchemaRegistry) ProtoMessage() {}

// Deprecated: Use VirtualSchemaRegistry.ProtoReflect.Descriptor instead.
func (*VirtualSchemaRegistry) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP(), []int{3}
}

func (x *VirtualSchemaRegistry) GetNftSchemaCode() string {
	if x != nil {
		return x.NftSchemaCode
	}
	return ""
}

func (x *VirtualSchemaRegistry) GetDecision() RegistryStatus {
	if x != nil {
		return x.Decision
	}
	return RegistryStatus_PENDING
}

type VirtualSchemaRegistryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftSchemaCode string `protobuf:"bytes,1,opt,name=nftSchemaCode,proto3" json:"nftSchemaCode,omitempty"`
}

func (x *VirtualSchemaRegistryRequest) Reset() {
	*x = VirtualSchemaRegistryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualSchemaRegistryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualSchemaRegistryRequest) ProtoMessage() {}

// Deprecated: Use VirtualSchemaRegistryRequest.ProtoReflect.Descriptor instead.
func (*VirtualSchemaRegistryRequest) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP(), []int{4}
}

func (x *VirtualSchemaRegistryRequest) GetNftSchemaCode() string {
	if x != nil {
		return x.NftSchemaCode
	}
	return ""
}

type ActiveVirtualSchemaProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ActiveVirtualSchemaProposal) Reset() {
	*x = ActiveVirtualSchemaProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveVirtualSchemaProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveVirtualSchemaProposal) ProtoMessage() {}

// Deprecated: Use ActiveVirtualSchemaProposal.ProtoReflect.Descriptor instead.
func (*ActiveVirtualSchemaProposal) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP(), []int{5}
}

func (x *ActiveVirtualSchemaProposal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InactiveVirtualSchemaProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *InactiveVirtualSchemaProposal) Reset() {
	*x = InactiveVirtualSchemaProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InactiveVirtualSchemaProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactiveVirtualSchemaProposal) ProtoMessage() {}

// Deprecated: Use InactiveVirtualSchemaProposal.ProtoReflect.Descriptor instead.
func (*InactiveVirtualSchemaProposal) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP(), []int{6}
}

func (x *InactiveVirtualSchemaProposal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_sixprotocol_nftmngr_virtual_schema_proto protoreflect.FileDescriptor

var file_sixprotocol_nftmngr_virtual_schema_proto_rawDesc = []byte{
	0x0a, 0x28, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66,
	0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x73, 0x69, 0x78, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x1a,
	0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x03, 0x0a, 0x15, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e,
	0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf,
	0x1f, 0x01, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4e,
	0x0a, 0x0f, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0f, 0x76,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a,
	0x0a, 0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0d, 0x76, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x1c, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12,
	0x35, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e,
	0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xa3, 0x01, 0x0a,
	0x0d, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x32,
	0x0a, 0x14, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x66, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4e, 0x66, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x7e, 0x0a, 0x15, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x66, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x66, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x3f, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x1c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x66, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x66, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x1d, 0x49, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x35, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4a, 0x45, 0x43,
	0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x02, 0x2a,
	0x24, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x45,
	0x44, 0x49, 0x54, 0x10, 0x01, 0x42, 0xd9, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x69,
	0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x6e, 0x67,
	0x72, 0x42, 0x12, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x78, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x73, 0x69, 0x78, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e,
	0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0xa2, 0x02, 0x03, 0x53, 0x4e, 0x58, 0xaa, 0x02, 0x13, 0x53,
	0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x66, 0x74, 0x6d, 0x6e,
	0x67, 0x72, 0xca, 0x02, 0x13, 0x53, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5c, 0x4e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0xe2, 0x02, 0x1f, 0x53, 0x69, 0x78, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x4e, 0x66, 0x74, 0x6d, 0x6e, 0x67, 0x72, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x53, 0x69, 0x78,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x3a, 0x3a, 0x4e, 0x66, 0x74, 0x6d, 0x6e, 0x67,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sixprotocol_nftmngr_virtual_schema_proto_rawDescOnce sync.Once
	file_sixprotocol_nftmngr_virtual_schema_proto_rawDescData = file_sixprotocol_nftmngr_virtual_schema_proto_rawDesc
)

func file_sixprotocol_nftmngr_virtual_schema_proto_rawDescGZIP() []byte {
	file_sixprotocol_nftmngr_virtual_schema_proto_rawDescOnce.Do(func() {
		file_sixprotocol_nftmngr_virtual_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_sixprotocol_nftmngr_virtual_schema_proto_rawDescData)
	})
	return file_sixprotocol_nftmngr_virtual_schema_proto_rawDescData
}

var file_sixprotocol_nftmngr_virtual_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sixprotocol_nftmngr_virtual_schema_proto_goTypes = []interface{}{
	(RegistryStatus)(0),                   // 0: sixprotocol.nftmngr.RegistryStatus
	(ProposalType)(0),                     // 1: sixprotocol.nftmngr.ProposalType
	(*VirtualSchemaProposal)(nil),         // 2: sixprotocol.nftmngr.VirtualSchemaProposal
	(*VirtualSchemaProposalRequest)(nil),  // 3: sixprotocol.nftmngr.VirtualSchemaProposalRequest
	(*VirtualSchema)(nil),                 // 4: sixprotocol.nftmngr.VirtualSchema
	(*VirtualSchemaRegistry)(nil),         // 5: sixprotocol.nftmngr.VirtualSchemaRegistry
	(*VirtualSchemaRegistryRequest)(nil),  // 6: sixprotocol.nftmngr.VirtualSchemaRegistryRequest
	(*ActiveVirtualSchemaProposal)(nil),   // 7: sixprotocol.nftmngr.ActiveVirtualSchemaProposal
	(*InactiveVirtualSchemaProposal)(nil), // 8: sixprotocol.nftmngr.InactiveVirtualSchemaProposal
	(*Action)(nil),                        // 9: sixprotocol.nftmngr.Action
	(*timestamppb.Timestamp)(nil),         // 10: google.protobuf.Timestamp
}
var file_sixprotocol_nftmngr_virtual_schema_proto_depIdxs = []int32{
	1,  // 0: sixprotocol.nftmngr.VirtualSchemaProposal.proposalType:type_name -> sixprotocol.nftmngr.ProposalType
	4,  // 1: sixprotocol.nftmngr.VirtualSchemaProposal.virtualSchema:type_name -> sixprotocol.nftmngr.VirtualSchema
	9,  // 2: sixprotocol.nftmngr.VirtualSchemaProposal.actions:type_name -> sixprotocol.nftmngr.Action
	10, // 3: sixprotocol.nftmngr.VirtualSchemaProposal.submitTime:type_name -> google.protobuf.Timestamp
	10, // 4: sixprotocol.nftmngr.VirtualSchemaProposal.votingStartTime:type_name -> google.protobuf.Timestamp
	10, // 5: sixprotocol.nftmngr.VirtualSchemaProposal.votingEndTime:type_name -> google.protobuf.Timestamp
	9,  // 6: sixprotocol.nftmngr.VirtualSchemaProposalRequest.actions:type_name -> sixprotocol.nftmngr.Action
	5,  // 7: sixprotocol.nftmngr.VirtualSchema.registry:type_name -> sixprotocol.nftmngr.VirtualSchemaRegistry
	0,  // 8: sixprotocol.nftmngr.VirtualSchemaRegistry.decision:type_name -> sixprotocol.nftmngr.RegistryStatus
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_sixprotocol_nftmngr_virtual_schema_proto_init() }
func file_sixprotocol_nftmngr_virtual_schema_proto_init() {
	if File_sixprotocol_nftmngr_virtual_schema_proto != nil {
		return
	}
	file_sixprotocol_nftmngr_action_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualSchemaProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualSchemaProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualSchemaRegistry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualSchemaRegistryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveVirtualSchemaProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InactiveVirtualSchemaProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sixprotocol_nftmngr_virtual_schema_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sixprotocol_nftmngr_virtual_schema_proto_goTypes,
		DependencyIndexes: file_sixprotocol_nftmngr_virtual_schema_proto_depIdxs,
		EnumInfos:         file_sixprotocol_nftmngr_virtual_schema_proto_enumTypes,
		MessageInfos:      file_sixprotocol_nftmngr_virtual_schema_proto_msgTypes,
	}.Build()
	File_sixprotocol_nftmngr_virtual_schema_proto = out.File
	file_sixprotocol_nftmngr_virtual_schema_proto_rawDesc = nil
	file_sixprotocol_nftmngr_virtual_schema_proto_goTypes = nil
	file_sixprotocol_nftmngr_virtual_schema_proto_depIdxs = nil
}
