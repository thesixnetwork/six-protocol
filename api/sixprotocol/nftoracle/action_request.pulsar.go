// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package nftoracle

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_ActionParameter       protoreflect.MessageDescriptor
	fd_ActionParameter_name  protoreflect.FieldDescriptor
	fd_ActionParameter_value protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftoracle_action_request_proto_init()
	md_ActionParameter = File_sixprotocol_nftoracle_action_request_proto.Messages().ByName("ActionParameter")
	fd_ActionParameter_name = md_ActionParameter.Fields().ByName("name")
	fd_ActionParameter_value = md_ActionParameter.Fields().ByName("value")
}

var _ protoreflect.Message = (*fastReflection_ActionParameter)(nil)

type fastReflection_ActionParameter ActionParameter

func (x *ActionParameter) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ActionParameter)(x)
}

func (x *ActionParameter) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftoracle_action_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ActionParameter_messageType fastReflection_ActionParameter_messageType
var _ protoreflect.MessageType = fastReflection_ActionParameter_messageType{}

type fastReflection_ActionParameter_messageType struct{}

func (x fastReflection_ActionParameter_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ActionParameter)(nil)
}
func (x fastReflection_ActionParameter_messageType) New() protoreflect.Message {
	return new(fastReflection_ActionParameter)
}
func (x fastReflection_ActionParameter_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ActionParameter
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ActionParameter) Descriptor() protoreflect.MessageDescriptor {
	return md_ActionParameter
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ActionParameter) Type() protoreflect.MessageType {
	return _fastReflection_ActionParameter_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ActionParameter) New() protoreflect.Message {
	return new(fastReflection_ActionParameter)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ActionParameter) Interface() protoreflect.ProtoMessage {
	return (*ActionParameter)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ActionParameter) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Name != "" {
		value := protoreflect.ValueOfString(x.Name)
		if !f(fd_ActionParameter_name, value) {
			return
		}
	}
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_ActionParameter_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ActionParameter) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionParameter.name":
		return x.Name != ""
	case "sixprotocol.nftoracle.ActionParameter.value":
		return x.Value != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionParameter"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionParameter does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionParameter) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionParameter.name":
		x.Name = ""
	case "sixprotocol.nftoracle.ActionParameter.value":
		x.Value = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionParameter"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionParameter does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ActionParameter) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftoracle.ActionParameter.name":
		value := x.Name
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionParameter.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionParameter"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionParameter does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionParameter) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionParameter.name":
		x.Name = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionParameter.value":
		x.Value = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionParameter"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionParameter does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionParameter) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionParameter.name":
		panic(fmt.Errorf("field name of message sixprotocol.nftoracle.ActionParameter is not mutable"))
	case "sixprotocol.nftoracle.ActionParameter.value":
		panic(fmt.Errorf("field value of message sixprotocol.nftoracle.ActionParameter is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionParameter"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionParameter does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ActionParameter) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionParameter.name":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionParameter.value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionParameter"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionParameter does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ActionParameter) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftoracle.ActionParameter", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ActionParameter) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionParameter) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ActionParameter) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ActionParameter) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ActionParameter)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Name)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ActionParameter)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Name) > 0 {
			i -= len(x.Name)
			copy(dAtA[i:], x.Name)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Name)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ActionParameter)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActionParameter: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActionParameter: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Name = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ActionOracleParam_4_list)(nil)

type _ActionOracleParam_4_list struct {
	list *[]*ActionParameter
}

func (x *_ActionOracleParam_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ActionOracleParam_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ActionOracleParam_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionParameter)
	(*x.list)[i] = concreteValue
}

func (x *_ActionOracleParam_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionParameter)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ActionOracleParam_4_list) AppendMutable() protoreflect.Value {
	v := new(ActionParameter)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ActionOracleParam_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ActionOracleParam_4_list) NewElement() protoreflect.Value {
	v := new(ActionParameter)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ActionOracleParam_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ActionOracleParam                 protoreflect.MessageDescriptor
	fd_ActionOracleParam_nft_schema_code protoreflect.FieldDescriptor
	fd_ActionOracleParam_token_id        protoreflect.FieldDescriptor
	fd_ActionOracleParam_action          protoreflect.FieldDescriptor
	fd_ActionOracleParam_params          protoreflect.FieldDescriptor
	fd_ActionOracleParam_ref_id          protoreflect.FieldDescriptor
	fd_ActionOracleParam_expired_at      protoreflect.FieldDescriptor
	fd_ActionOracleParam_on_behalf_of    protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftoracle_action_request_proto_init()
	md_ActionOracleParam = File_sixprotocol_nftoracle_action_request_proto.Messages().ByName("ActionOracleParam")
	fd_ActionOracleParam_nft_schema_code = md_ActionOracleParam.Fields().ByName("nft_schema_code")
	fd_ActionOracleParam_token_id = md_ActionOracleParam.Fields().ByName("token_id")
	fd_ActionOracleParam_action = md_ActionOracleParam.Fields().ByName("action")
	fd_ActionOracleParam_params = md_ActionOracleParam.Fields().ByName("params")
	fd_ActionOracleParam_ref_id = md_ActionOracleParam.Fields().ByName("ref_id")
	fd_ActionOracleParam_expired_at = md_ActionOracleParam.Fields().ByName("expired_at")
	fd_ActionOracleParam_on_behalf_of = md_ActionOracleParam.Fields().ByName("on_behalf_of")
}

var _ protoreflect.Message = (*fastReflection_ActionOracleParam)(nil)

type fastReflection_ActionOracleParam ActionOracleParam

func (x *ActionOracleParam) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ActionOracleParam)(x)
}

func (x *ActionOracleParam) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftoracle_action_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ActionOracleParam_messageType fastReflection_ActionOracleParam_messageType
var _ protoreflect.MessageType = fastReflection_ActionOracleParam_messageType{}

type fastReflection_ActionOracleParam_messageType struct{}

func (x fastReflection_ActionOracleParam_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ActionOracleParam)(nil)
}
func (x fastReflection_ActionOracleParam_messageType) New() protoreflect.Message {
	return new(fastReflection_ActionOracleParam)
}
func (x fastReflection_ActionOracleParam_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ActionOracleParam
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ActionOracleParam) Descriptor() protoreflect.MessageDescriptor {
	return md_ActionOracleParam
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ActionOracleParam) Type() protoreflect.MessageType {
	return _fastReflection_ActionOracleParam_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ActionOracleParam) New() protoreflect.Message {
	return new(fastReflection_ActionOracleParam)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ActionOracleParam) Interface() protoreflect.ProtoMessage {
	return (*ActionOracleParam)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ActionOracleParam) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NftSchemaCode != "" {
		value := protoreflect.ValueOfString(x.NftSchemaCode)
		if !f(fd_ActionOracleParam_nft_schema_code, value) {
			return
		}
	}
	if x.TokenId != "" {
		value := protoreflect.ValueOfString(x.TokenId)
		if !f(fd_ActionOracleParam_token_id, value) {
			return
		}
	}
	if x.Action != "" {
		value := protoreflect.ValueOfString(x.Action)
		if !f(fd_ActionOracleParam_action, value) {
			return
		}
	}
	if len(x.Params) != 0 {
		value := protoreflect.ValueOfList(&_ActionOracleParam_4_list{list: &x.Params})
		if !f(fd_ActionOracleParam_params, value) {
			return
		}
	}
	if x.RefId != "" {
		value := protoreflect.ValueOfString(x.RefId)
		if !f(fd_ActionOracleParam_ref_id, value) {
			return
		}
	}
	if x.ExpiredAt != nil {
		value := protoreflect.ValueOfMessage(x.ExpiredAt.ProtoReflect())
		if !f(fd_ActionOracleParam_expired_at, value) {
			return
		}
	}
	if x.OnBehalfOf != "" {
		value := protoreflect.ValueOfString(x.OnBehalfOf)
		if !f(fd_ActionOracleParam_on_behalf_of, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ActionOracleParam) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleParam.nft_schema_code":
		return x.NftSchemaCode != ""
	case "sixprotocol.nftoracle.ActionOracleParam.token_id":
		return x.TokenId != ""
	case "sixprotocol.nftoracle.ActionOracleParam.action":
		return x.Action != ""
	case "sixprotocol.nftoracle.ActionOracleParam.params":
		return len(x.Params) != 0
	case "sixprotocol.nftoracle.ActionOracleParam.ref_id":
		return x.RefId != ""
	case "sixprotocol.nftoracle.ActionOracleParam.expired_at":
		return x.ExpiredAt != nil
	case "sixprotocol.nftoracle.ActionOracleParam.on_behalf_of":
		return x.OnBehalfOf != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleParam"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleParam does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionOracleParam) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleParam.nft_schema_code":
		x.NftSchemaCode = ""
	case "sixprotocol.nftoracle.ActionOracleParam.token_id":
		x.TokenId = ""
	case "sixprotocol.nftoracle.ActionOracleParam.action":
		x.Action = ""
	case "sixprotocol.nftoracle.ActionOracleParam.params":
		x.Params = nil
	case "sixprotocol.nftoracle.ActionOracleParam.ref_id":
		x.RefId = ""
	case "sixprotocol.nftoracle.ActionOracleParam.expired_at":
		x.ExpiredAt = nil
	case "sixprotocol.nftoracle.ActionOracleParam.on_behalf_of":
		x.OnBehalfOf = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleParam"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleParam does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ActionOracleParam) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftoracle.ActionOracleParam.nft_schema_code":
		value := x.NftSchemaCode
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionOracleParam.token_id":
		value := x.TokenId
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionOracleParam.action":
		value := x.Action
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionOracleParam.params":
		if len(x.Params) == 0 {
			return protoreflect.ValueOfList(&_ActionOracleParam_4_list{})
		}
		listValue := &_ActionOracleParam_4_list{list: &x.Params}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftoracle.ActionOracleParam.ref_id":
		value := x.RefId
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionOracleParam.expired_at":
		value := x.ExpiredAt
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sixprotocol.nftoracle.ActionOracleParam.on_behalf_of":
		value := x.OnBehalfOf
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleParam"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleParam does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionOracleParam) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleParam.nft_schema_code":
		x.NftSchemaCode = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionOracleParam.token_id":
		x.TokenId = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionOracleParam.action":
		x.Action = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionOracleParam.params":
		lv := value.List()
		clv := lv.(*_ActionOracleParam_4_list)
		x.Params = *clv.list
	case "sixprotocol.nftoracle.ActionOracleParam.ref_id":
		x.RefId = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionOracleParam.expired_at":
		x.ExpiredAt = value.Message().Interface().(*timestamppb.Timestamp)
	case "sixprotocol.nftoracle.ActionOracleParam.on_behalf_of":
		x.OnBehalfOf = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleParam"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleParam does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionOracleParam) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleParam.params":
		if x.Params == nil {
			x.Params = []*ActionParameter{}
		}
		value := &_ActionOracleParam_4_list{list: &x.Params}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftoracle.ActionOracleParam.expired_at":
		if x.ExpiredAt == nil {
			x.ExpiredAt = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.ExpiredAt.ProtoReflect())
	case "sixprotocol.nftoracle.ActionOracleParam.nft_schema_code":
		panic(fmt.Errorf("field nft_schema_code of message sixprotocol.nftoracle.ActionOracleParam is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleParam.token_id":
		panic(fmt.Errorf("field token_id of message sixprotocol.nftoracle.ActionOracleParam is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleParam.action":
		panic(fmt.Errorf("field action of message sixprotocol.nftoracle.ActionOracleParam is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleParam.ref_id":
		panic(fmt.Errorf("field ref_id of message sixprotocol.nftoracle.ActionOracleParam is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleParam.on_behalf_of":
		panic(fmt.Errorf("field on_behalf_of of message sixprotocol.nftoracle.ActionOracleParam is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleParam"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleParam does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ActionOracleParam) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleParam.nft_schema_code":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionOracleParam.token_id":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionOracleParam.action":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionOracleParam.params":
		list := []*ActionParameter{}
		return protoreflect.ValueOfList(&_ActionOracleParam_4_list{list: &list})
	case "sixprotocol.nftoracle.ActionOracleParam.ref_id":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionOracleParam.expired_at":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sixprotocol.nftoracle.ActionOracleParam.on_behalf_of":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleParam"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleParam does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ActionOracleParam) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftoracle.ActionOracleParam", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ActionOracleParam) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionOracleParam) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ActionOracleParam) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ActionOracleParam) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ActionOracleParam)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.NftSchemaCode)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TokenId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Action)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Params) > 0 {
			for _, e := range x.Params {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.RefId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ExpiredAt != nil {
			l = options.Size(x.ExpiredAt)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OnBehalfOf)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ActionOracleParam)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.OnBehalfOf) > 0 {
			i -= len(x.OnBehalfOf)
			copy(dAtA[i:], x.OnBehalfOf)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OnBehalfOf)))
			i--
			dAtA[i] = 0x3a
		}
		if x.ExpiredAt != nil {
			encoded, err := options.Marshal(x.ExpiredAt)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.RefId) > 0 {
			i -= len(x.RefId)
			copy(dAtA[i:], x.RefId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RefId)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Params) > 0 {
			for iNdEx := len(x.Params) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Params[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Action) > 0 {
			i -= len(x.Action)
			copy(dAtA[i:], x.Action)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Action)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.TokenId) > 0 {
			i -= len(x.TokenId)
			copy(dAtA[i:], x.TokenId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.NftSchemaCode) > 0 {
			i -= len(x.NftSchemaCode)
			copy(dAtA[i:], x.NftSchemaCode)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NftSchemaCode)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ActionOracleParam)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActionOracleParam: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActionOracleParam: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftSchemaCode", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NftSchemaCode = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Action = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Params = append(x.Params, &ActionParameter{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params[len(x.Params)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RefId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RefId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpiredAt", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ExpiredAt == nil {
					x.ExpiredAt = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ExpiredAt); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OnBehalfOf", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OnBehalfOf = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ActionOracleRequest_5_list)(nil)

type _ActionOracleRequest_5_list struct {
	list *[]*ActionParameter
}

func (x *_ActionOracleRequest_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ActionOracleRequest_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ActionOracleRequest_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionParameter)
	(*x.list)[i] = concreteValue
}

func (x *_ActionOracleRequest_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionParameter)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ActionOracleRequest_5_list) AppendMutable() protoreflect.Value {
	v := new(ActionParameter)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ActionOracleRequest_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ActionOracleRequest_5_list) NewElement() protoreflect.Value {
	v := new(ActionParameter)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ActionOracleRequest_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ActionOracleRequest_11_list)(nil)

type _ActionOracleRequest_11_list struct {
	list *[]string
}

func (x *_ActionOracleRequest_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ActionOracleRequest_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_ActionOracleRequest_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ActionOracleRequest_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ActionOracleRequest_11_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ActionOracleRequest at list field Confirmers as it is not of Message kind"))
}

func (x *_ActionOracleRequest_11_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ActionOracleRequest_11_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_ActionOracleRequest_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ActionOracleRequest_14_list)(nil)

type _ActionOracleRequest_14_list struct {
	list *[]*DataHash
}

func (x *_ActionOracleRequest_14_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ActionOracleRequest_14_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ActionOracleRequest_14_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DataHash)
	(*x.list)[i] = concreteValue
}

func (x *_ActionOracleRequest_14_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DataHash)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ActionOracleRequest_14_list) AppendMutable() protoreflect.Value {
	v := new(DataHash)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ActionOracleRequest_14_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ActionOracleRequest_14_list) NewElement() protoreflect.Value {
	v := new(DataHash)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ActionOracleRequest_14_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ActionOracleRequest                         protoreflect.MessageDescriptor
	fd_ActionOracleRequest_id                      protoreflect.FieldDescriptor
	fd_ActionOracleRequest_nft_schema_code         protoreflect.FieldDescriptor
	fd_ActionOracleRequest_token_id                protoreflect.FieldDescriptor
	fd_ActionOracleRequest_action                  protoreflect.FieldDescriptor
	fd_ActionOracleRequest_params                  protoreflect.FieldDescriptor
	fd_ActionOracleRequest_caller                  protoreflect.FieldDescriptor
	fd_ActionOracleRequest_ref_id                  protoreflect.FieldDescriptor
	fd_ActionOracleRequest_required_confirm        protoreflect.FieldDescriptor
	fd_ActionOracleRequest_status                  protoreflect.FieldDescriptor
	fd_ActionOracleRequest_current_confirm         protoreflect.FieldDescriptor
	fd_ActionOracleRequest_confirmers              protoreflect.FieldDescriptor
	fd_ActionOracleRequest_created_at              protoreflect.FieldDescriptor
	fd_ActionOracleRequest_valid_until             protoreflect.FieldDescriptor
	fd_ActionOracleRequest_data_hashes             protoreflect.FieldDescriptor
	fd_ActionOracleRequest_expired_height          protoreflect.FieldDescriptor
	fd_ActionOracleRequest_execution_error_message protoreflect.FieldDescriptor
)

func init() {
	file_sixprotocol_nftoracle_action_request_proto_init()
	md_ActionOracleRequest = File_sixprotocol_nftoracle_action_request_proto.Messages().ByName("ActionOracleRequest")
	fd_ActionOracleRequest_id = md_ActionOracleRequest.Fields().ByName("id")
	fd_ActionOracleRequest_nft_schema_code = md_ActionOracleRequest.Fields().ByName("nft_schema_code")
	fd_ActionOracleRequest_token_id = md_ActionOracleRequest.Fields().ByName("token_id")
	fd_ActionOracleRequest_action = md_ActionOracleRequest.Fields().ByName("action")
	fd_ActionOracleRequest_params = md_ActionOracleRequest.Fields().ByName("params")
	fd_ActionOracleRequest_caller = md_ActionOracleRequest.Fields().ByName("caller")
	fd_ActionOracleRequest_ref_id = md_ActionOracleRequest.Fields().ByName("ref_id")
	fd_ActionOracleRequest_required_confirm = md_ActionOracleRequest.Fields().ByName("required_confirm")
	fd_ActionOracleRequest_status = md_ActionOracleRequest.Fields().ByName("status")
	fd_ActionOracleRequest_current_confirm = md_ActionOracleRequest.Fields().ByName("current_confirm")
	fd_ActionOracleRequest_confirmers = md_ActionOracleRequest.Fields().ByName("confirmers")
	fd_ActionOracleRequest_created_at = md_ActionOracleRequest.Fields().ByName("created_at")
	fd_ActionOracleRequest_valid_until = md_ActionOracleRequest.Fields().ByName("valid_until")
	fd_ActionOracleRequest_data_hashes = md_ActionOracleRequest.Fields().ByName("data_hashes")
	fd_ActionOracleRequest_expired_height = md_ActionOracleRequest.Fields().ByName("expired_height")
	fd_ActionOracleRequest_execution_error_message = md_ActionOracleRequest.Fields().ByName("execution_error_message")
}

var _ protoreflect.Message = (*fastReflection_ActionOracleRequest)(nil)

type fastReflection_ActionOracleRequest ActionOracleRequest

func (x *ActionOracleRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ActionOracleRequest)(x)
}

func (x *ActionOracleRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_sixprotocol_nftoracle_action_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ActionOracleRequest_messageType fastReflection_ActionOracleRequest_messageType
var _ protoreflect.MessageType = fastReflection_ActionOracleRequest_messageType{}

type fastReflection_ActionOracleRequest_messageType struct{}

func (x fastReflection_ActionOracleRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ActionOracleRequest)(nil)
}
func (x fastReflection_ActionOracleRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_ActionOracleRequest)
}
func (x fastReflection_ActionOracleRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ActionOracleRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ActionOracleRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_ActionOracleRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ActionOracleRequest) Type() protoreflect.MessageType {
	return _fastReflection_ActionOracleRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ActionOracleRequest) New() protoreflect.Message {
	return new(fastReflection_ActionOracleRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ActionOracleRequest) Interface() protoreflect.ProtoMessage {
	return (*ActionOracleRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ActionOracleRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_ActionOracleRequest_id, value) {
			return
		}
	}
	if x.NftSchemaCode != "" {
		value := protoreflect.ValueOfString(x.NftSchemaCode)
		if !f(fd_ActionOracleRequest_nft_schema_code, value) {
			return
		}
	}
	if x.TokenId != "" {
		value := protoreflect.ValueOfString(x.TokenId)
		if !f(fd_ActionOracleRequest_token_id, value) {
			return
		}
	}
	if x.Action != "" {
		value := protoreflect.ValueOfString(x.Action)
		if !f(fd_ActionOracleRequest_action, value) {
			return
		}
	}
	if len(x.Params) != 0 {
		value := protoreflect.ValueOfList(&_ActionOracleRequest_5_list{list: &x.Params})
		if !f(fd_ActionOracleRequest_params, value) {
			return
		}
	}
	if x.Caller != "" {
		value := protoreflect.ValueOfString(x.Caller)
		if !f(fd_ActionOracleRequest_caller, value) {
			return
		}
	}
	if x.RefId != "" {
		value := protoreflect.ValueOfString(x.RefId)
		if !f(fd_ActionOracleRequest_ref_id, value) {
			return
		}
	}
	if x.RequiredConfirm != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RequiredConfirm)
		if !f(fd_ActionOracleRequest_required_confirm, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_ActionOracleRequest_status, value) {
			return
		}
	}
	if x.CurrentConfirm != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentConfirm)
		if !f(fd_ActionOracleRequest_current_confirm, value) {
			return
		}
	}
	if len(x.Confirmers) != 0 {
		value := protoreflect.ValueOfList(&_ActionOracleRequest_11_list{list: &x.Confirmers})
		if !f(fd_ActionOracleRequest_confirmers, value) {
			return
		}
	}
	if x.CreatedAt != nil {
		value := protoreflect.ValueOfMessage(x.CreatedAt.ProtoReflect())
		if !f(fd_ActionOracleRequest_created_at, value) {
			return
		}
	}
	if x.ValidUntil != nil {
		value := protoreflect.ValueOfMessage(x.ValidUntil.ProtoReflect())
		if !f(fd_ActionOracleRequest_valid_until, value) {
			return
		}
	}
	if len(x.DataHashes) != 0 {
		value := protoreflect.ValueOfList(&_ActionOracleRequest_14_list{list: &x.DataHashes})
		if !f(fd_ActionOracleRequest_data_hashes, value) {
			return
		}
	}
	if x.ExpiredHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.ExpiredHeight)
		if !f(fd_ActionOracleRequest_expired_height, value) {
			return
		}
	}
	if x.ExecutionErrorMessage != "" {
		value := protoreflect.ValueOfString(x.ExecutionErrorMessage)
		if !f(fd_ActionOracleRequest_execution_error_message, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ActionOracleRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleRequest.id":
		return x.Id != uint64(0)
	case "sixprotocol.nftoracle.ActionOracleRequest.nft_schema_code":
		return x.NftSchemaCode != ""
	case "sixprotocol.nftoracle.ActionOracleRequest.token_id":
		return x.TokenId != ""
	case "sixprotocol.nftoracle.ActionOracleRequest.action":
		return x.Action != ""
	case "sixprotocol.nftoracle.ActionOracleRequest.params":
		return len(x.Params) != 0
	case "sixprotocol.nftoracle.ActionOracleRequest.caller":
		return x.Caller != ""
	case "sixprotocol.nftoracle.ActionOracleRequest.ref_id":
		return x.RefId != ""
	case "sixprotocol.nftoracle.ActionOracleRequest.required_confirm":
		return x.RequiredConfirm != uint64(0)
	case "sixprotocol.nftoracle.ActionOracleRequest.status":
		return x.Status != 0
	case "sixprotocol.nftoracle.ActionOracleRequest.current_confirm":
		return x.CurrentConfirm != uint64(0)
	case "sixprotocol.nftoracle.ActionOracleRequest.confirmers":
		return len(x.Confirmers) != 0
	case "sixprotocol.nftoracle.ActionOracleRequest.created_at":
		return x.CreatedAt != nil
	case "sixprotocol.nftoracle.ActionOracleRequest.valid_until":
		return x.ValidUntil != nil
	case "sixprotocol.nftoracle.ActionOracleRequest.data_hashes":
		return len(x.DataHashes) != 0
	case "sixprotocol.nftoracle.ActionOracleRequest.expired_height":
		return x.ExpiredHeight != int64(0)
	case "sixprotocol.nftoracle.ActionOracleRequest.execution_error_message":
		return x.ExecutionErrorMessage != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionOracleRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleRequest.id":
		x.Id = uint64(0)
	case "sixprotocol.nftoracle.ActionOracleRequest.nft_schema_code":
		x.NftSchemaCode = ""
	case "sixprotocol.nftoracle.ActionOracleRequest.token_id":
		x.TokenId = ""
	case "sixprotocol.nftoracle.ActionOracleRequest.action":
		x.Action = ""
	case "sixprotocol.nftoracle.ActionOracleRequest.params":
		x.Params = nil
	case "sixprotocol.nftoracle.ActionOracleRequest.caller":
		x.Caller = ""
	case "sixprotocol.nftoracle.ActionOracleRequest.ref_id":
		x.RefId = ""
	case "sixprotocol.nftoracle.ActionOracleRequest.required_confirm":
		x.RequiredConfirm = uint64(0)
	case "sixprotocol.nftoracle.ActionOracleRequest.status":
		x.Status = 0
	case "sixprotocol.nftoracle.ActionOracleRequest.current_confirm":
		x.CurrentConfirm = uint64(0)
	case "sixprotocol.nftoracle.ActionOracleRequest.confirmers":
		x.Confirmers = nil
	case "sixprotocol.nftoracle.ActionOracleRequest.created_at":
		x.CreatedAt = nil
	case "sixprotocol.nftoracle.ActionOracleRequest.valid_until":
		x.ValidUntil = nil
	case "sixprotocol.nftoracle.ActionOracleRequest.data_hashes":
		x.DataHashes = nil
	case "sixprotocol.nftoracle.ActionOracleRequest.expired_height":
		x.ExpiredHeight = int64(0)
	case "sixprotocol.nftoracle.ActionOracleRequest.execution_error_message":
		x.ExecutionErrorMessage = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ActionOracleRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sixprotocol.nftoracle.ActionOracleRequest.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.nft_schema_code":
		value := x.NftSchemaCode
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.token_id":
		value := x.TokenId
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.action":
		value := x.Action
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.params":
		if len(x.Params) == 0 {
			return protoreflect.ValueOfList(&_ActionOracleRequest_5_list{})
		}
		listValue := &_ActionOracleRequest_5_list{list: &x.Params}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftoracle.ActionOracleRequest.caller":
		value := x.Caller
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.ref_id":
		value := x.RefId
		return protoreflect.ValueOfString(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.required_confirm":
		value := x.RequiredConfirm
		return protoreflect.ValueOfUint64(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "sixprotocol.nftoracle.ActionOracleRequest.current_confirm":
		value := x.CurrentConfirm
		return protoreflect.ValueOfUint64(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.confirmers":
		if len(x.Confirmers) == 0 {
			return protoreflect.ValueOfList(&_ActionOracleRequest_11_list{})
		}
		listValue := &_ActionOracleRequest_11_list{list: &x.Confirmers}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftoracle.ActionOracleRequest.created_at":
		value := x.CreatedAt
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sixprotocol.nftoracle.ActionOracleRequest.valid_until":
		value := x.ValidUntil
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sixprotocol.nftoracle.ActionOracleRequest.data_hashes":
		if len(x.DataHashes) == 0 {
			return protoreflect.ValueOfList(&_ActionOracleRequest_14_list{})
		}
		listValue := &_ActionOracleRequest_14_list{list: &x.DataHashes}
		return protoreflect.ValueOfList(listValue)
	case "sixprotocol.nftoracle.ActionOracleRequest.expired_height":
		value := x.ExpiredHeight
		return protoreflect.ValueOfInt64(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.execution_error_message":
		value := x.ExecutionErrorMessage
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionOracleRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleRequest.id":
		x.Id = value.Uint()
	case "sixprotocol.nftoracle.ActionOracleRequest.nft_schema_code":
		x.NftSchemaCode = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionOracleRequest.token_id":
		x.TokenId = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionOracleRequest.action":
		x.Action = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionOracleRequest.params":
		lv := value.List()
		clv := lv.(*_ActionOracleRequest_5_list)
		x.Params = *clv.list
	case "sixprotocol.nftoracle.ActionOracleRequest.caller":
		x.Caller = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionOracleRequest.ref_id":
		x.RefId = value.Interface().(string)
	case "sixprotocol.nftoracle.ActionOracleRequest.required_confirm":
		x.RequiredConfirm = value.Uint()
	case "sixprotocol.nftoracle.ActionOracleRequest.status":
		x.Status = (RequestStatus)(value.Enum())
	case "sixprotocol.nftoracle.ActionOracleRequest.current_confirm":
		x.CurrentConfirm = value.Uint()
	case "sixprotocol.nftoracle.ActionOracleRequest.confirmers":
		lv := value.List()
		clv := lv.(*_ActionOracleRequest_11_list)
		x.Confirmers = *clv.list
	case "sixprotocol.nftoracle.ActionOracleRequest.created_at":
		x.CreatedAt = value.Message().Interface().(*timestamppb.Timestamp)
	case "sixprotocol.nftoracle.ActionOracleRequest.valid_until":
		x.ValidUntil = value.Message().Interface().(*timestamppb.Timestamp)
	case "sixprotocol.nftoracle.ActionOracleRequest.data_hashes":
		lv := value.List()
		clv := lv.(*_ActionOracleRequest_14_list)
		x.DataHashes = *clv.list
	case "sixprotocol.nftoracle.ActionOracleRequest.expired_height":
		x.ExpiredHeight = value.Int()
	case "sixprotocol.nftoracle.ActionOracleRequest.execution_error_message":
		x.ExecutionErrorMessage = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionOracleRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleRequest.params":
		if x.Params == nil {
			x.Params = []*ActionParameter{}
		}
		value := &_ActionOracleRequest_5_list{list: &x.Params}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.confirmers":
		if x.Confirmers == nil {
			x.Confirmers = []string{}
		}
		value := &_ActionOracleRequest_11_list{list: &x.Confirmers}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.created_at":
		if x.CreatedAt == nil {
			x.CreatedAt = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.CreatedAt.ProtoReflect())
	case "sixprotocol.nftoracle.ActionOracleRequest.valid_until":
		if x.ValidUntil == nil {
			x.ValidUntil = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.ValidUntil.ProtoReflect())
	case "sixprotocol.nftoracle.ActionOracleRequest.data_hashes":
		if x.DataHashes == nil {
			x.DataHashes = []*DataHash{}
		}
		value := &_ActionOracleRequest_14_list{list: &x.DataHashes}
		return protoreflect.ValueOfList(value)
	case "sixprotocol.nftoracle.ActionOracleRequest.id":
		panic(fmt.Errorf("field id of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.nft_schema_code":
		panic(fmt.Errorf("field nft_schema_code of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.token_id":
		panic(fmt.Errorf("field token_id of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.action":
		panic(fmt.Errorf("field action of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.caller":
		panic(fmt.Errorf("field caller of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.ref_id":
		panic(fmt.Errorf("field ref_id of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.required_confirm":
		panic(fmt.Errorf("field required_confirm of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.status":
		panic(fmt.Errorf("field status of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.current_confirm":
		panic(fmt.Errorf("field current_confirm of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.expired_height":
		panic(fmt.Errorf("field expired_height of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	case "sixprotocol.nftoracle.ActionOracleRequest.execution_error_message":
		panic(fmt.Errorf("field execution_error_message of message sixprotocol.nftoracle.ActionOracleRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ActionOracleRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sixprotocol.nftoracle.ActionOracleRequest.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sixprotocol.nftoracle.ActionOracleRequest.nft_schema_code":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionOracleRequest.token_id":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionOracleRequest.action":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionOracleRequest.params":
		list := []*ActionParameter{}
		return protoreflect.ValueOfList(&_ActionOracleRequest_5_list{list: &list})
	case "sixprotocol.nftoracle.ActionOracleRequest.caller":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionOracleRequest.ref_id":
		return protoreflect.ValueOfString("")
	case "sixprotocol.nftoracle.ActionOracleRequest.required_confirm":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sixprotocol.nftoracle.ActionOracleRequest.status":
		return protoreflect.ValueOfEnum(0)
	case "sixprotocol.nftoracle.ActionOracleRequest.current_confirm":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sixprotocol.nftoracle.ActionOracleRequest.confirmers":
		list := []string{}
		return protoreflect.ValueOfList(&_ActionOracleRequest_11_list{list: &list})
	case "sixprotocol.nftoracle.ActionOracleRequest.created_at":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sixprotocol.nftoracle.ActionOracleRequest.valid_until":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sixprotocol.nftoracle.ActionOracleRequest.data_hashes":
		list := []*DataHash{}
		return protoreflect.ValueOfList(&_ActionOracleRequest_14_list{list: &list})
	case "sixprotocol.nftoracle.ActionOracleRequest.expired_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "sixprotocol.nftoracle.ActionOracleRequest.execution_error_message":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sixprotocol.nftoracle.ActionOracleRequest"))
		}
		panic(fmt.Errorf("message sixprotocol.nftoracle.ActionOracleRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ActionOracleRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sixprotocol.nftoracle.ActionOracleRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ActionOracleRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActionOracleRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ActionOracleRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ActionOracleRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ActionOracleRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.NftSchemaCode)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TokenId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Action)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Params) > 0 {
			for _, e := range x.Params {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Caller)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RefId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RequiredConfirm != 0 {
			n += 1 + runtime.Sov(uint64(x.RequiredConfirm))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.CurrentConfirm != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentConfirm))
		}
		if len(x.Confirmers) > 0 {
			for _, s := range x.Confirmers {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.CreatedAt != nil {
			l = options.Size(x.CreatedAt)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ValidUntil != nil {
			l = options.Size(x.ValidUntil)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.DataHashes) > 0 {
			for _, e := range x.DataHashes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.ExpiredHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.ExpiredHeight))
		}
		l = len(x.ExecutionErrorMessage)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ActionOracleRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ExecutionErrorMessage) > 0 {
			i -= len(x.ExecutionErrorMessage)
			copy(dAtA[i:], x.ExecutionErrorMessage)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExecutionErrorMessage)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if x.ExpiredHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExpiredHeight))
			i--
			dAtA[i] = 0x78
		}
		if len(x.DataHashes) > 0 {
			for iNdEx := len(x.DataHashes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DataHashes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x72
			}
		}
		if x.ValidUntil != nil {
			encoded, err := options.Marshal(x.ValidUntil)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x6a
		}
		if x.CreatedAt != nil {
			encoded, err := options.Marshal(x.CreatedAt)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.Confirmers) > 0 {
			for iNdEx := len(x.Confirmers) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Confirmers[iNdEx])
				copy(dAtA[i:], x.Confirmers[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Confirmers[iNdEx])))
				i--
				dAtA[i] = 0x5a
			}
		}
		if x.CurrentConfirm != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentConfirm))
			i--
			dAtA[i] = 0x50
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x48
		}
		if x.RequiredConfirm != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RequiredConfirm))
			i--
			dAtA[i] = 0x40
		}
		if len(x.RefId) > 0 {
			i -= len(x.RefId)
			copy(dAtA[i:], x.RefId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RefId)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Caller) > 0 {
			i -= len(x.Caller)
			copy(dAtA[i:], x.Caller)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Caller)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Params) > 0 {
			for iNdEx := len(x.Params) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Params[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.Action) > 0 {
			i -= len(x.Action)
			copy(dAtA[i:], x.Action)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Action)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TokenId) > 0 {
			i -= len(x.TokenId)
			copy(dAtA[i:], x.TokenId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.NftSchemaCode) > 0 {
			i -= len(x.NftSchemaCode)
			copy(dAtA[i:], x.NftSchemaCode)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NftSchemaCode)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ActionOracleRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActionOracleRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActionOracleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NftSchemaCode", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NftSchemaCode = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Action = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Params = append(x.Params, &ActionParameter{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params[len(x.Params)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Caller", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Caller = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RefId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RefId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequiredConfirm", wireType)
				}
				x.RequiredConfirm = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RequiredConfirm |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= RequestStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentConfirm", wireType)
				}
				x.CurrentConfirm = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentConfirm |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Confirmers", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Confirmers = append(x.Confirmers, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CreatedAt == nil {
					x.CreatedAt = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CreatedAt); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidUntil", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ValidUntil == nil {
					x.ValidUntil = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValidUntil); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataHashes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DataHashes = append(x.DataHashes, &DataHash{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DataHashes[len(x.DataHashes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 15:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpiredHeight", wireType)
				}
				x.ExpiredHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExpiredHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExecutionErrorMessage", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExecutionErrorMessage = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: sixprotocol/nftoracle/action_request.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ActionParameter) Reset() {
	*x = ActionParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftoracle_action_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionParameter) ProtoMessage() {}

// Deprecated: Use ActionParameter.ProtoReflect.Descriptor instead.
func (*ActionParameter) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftoracle_action_request_proto_rawDescGZIP(), []int{0}
}

func (x *ActionParameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionParameter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ActionOracleParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftSchemaCode string                 `protobuf:"bytes,1,opt,name=nft_schema_code,json=nftSchemaCode,proto3" json:"nft_schema_code,omitempty"`
	TokenId       string                 `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Action        string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Params        []*ActionParameter     `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty"`
	RefId         string                 `protobuf:"bytes,5,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	ExpiredAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`
	OnBehalfOf    string                 `protobuf:"bytes,7,opt,name=on_behalf_of,json=onBehalfOf,proto3" json:"on_behalf_of,omitempty"`
}

func (x *ActionOracleParam) Reset() {
	*x = ActionOracleParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftoracle_action_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionOracleParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionOracleParam) ProtoMessage() {}

// Deprecated: Use ActionOracleParam.ProtoReflect.Descriptor instead.
func (*ActionOracleParam) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftoracle_action_request_proto_rawDescGZIP(), []int{1}
}

func (x *ActionOracleParam) GetNftSchemaCode() string {
	if x != nil {
		return x.NftSchemaCode
	}
	return ""
}

func (x *ActionOracleParam) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *ActionOracleParam) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ActionOracleParam) GetParams() []*ActionParameter {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ActionOracleParam) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *ActionOracleParam) GetExpiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredAt
	}
	return nil
}

func (x *ActionOracleParam) GetOnBehalfOf() string {
	if x != nil {
		return x.OnBehalfOf
	}
	return ""
}

type ActionOracleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NftSchemaCode         string                 `protobuf:"bytes,2,opt,name=nft_schema_code,json=nftSchemaCode,proto3" json:"nft_schema_code,omitempty"`
	TokenId               string                 `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Action                string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Params                []*ActionParameter     `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	Caller                string                 `protobuf:"bytes,6,opt,name=caller,proto3" json:"caller,omitempty"`
	RefId                 string                 `protobuf:"bytes,7,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	RequiredConfirm       uint64                 `protobuf:"varint,8,opt,name=required_confirm,json=requiredConfirm,proto3" json:"required_confirm,omitempty"`
	Status                RequestStatus          `protobuf:"varint,9,opt,name=status,proto3,enum=sixprotocol.nftoracle.RequestStatus" json:"status,omitempty"`
	CurrentConfirm        uint64                 `protobuf:"varint,10,opt,name=current_confirm,json=currentConfirm,proto3" json:"current_confirm,omitempty"`
	Confirmers            []string               `protobuf:"bytes,11,rep,name=confirmers,proto3" json:"confirmers,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ValidUntil            *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	DataHashes            []*DataHash            `protobuf:"bytes,14,rep,name=data_hashes,json=dataHashes,proto3" json:"data_hashes,omitempty"`
	ExpiredHeight         int64                  `protobuf:"varint,15,opt,name=expired_height,json=expiredHeight,proto3" json:"expired_height,omitempty"`
	ExecutionErrorMessage string                 `protobuf:"bytes,16,opt,name=execution_error_message,json=executionErrorMessage,proto3" json:"execution_error_message,omitempty"`
}

func (x *ActionOracleRequest) Reset() {
	*x = ActionOracleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sixprotocol_nftoracle_action_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionOracleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionOracleRequest) ProtoMessage() {}

// Deprecated: Use ActionOracleRequest.ProtoReflect.Descriptor instead.
func (*ActionOracleRequest) Descriptor() ([]byte, []int) {
	return file_sixprotocol_nftoracle_action_request_proto_rawDescGZIP(), []int{2}
}

func (x *ActionOracleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActionOracleRequest) GetNftSchemaCode() string {
	if x != nil {
		return x.NftSchemaCode
	}
	return ""
}

func (x *ActionOracleRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *ActionOracleRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ActionOracleRequest) GetParams() []*ActionParameter {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ActionOracleRequest) GetCaller() string {
	if x != nil {
		return x.Caller
	}
	return ""
}

func (x *ActionOracleRequest) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *ActionOracleRequest) GetRequiredConfirm() uint64 {
	if x != nil {
		return x.RequiredConfirm
	}
	return 0
}

func (x *ActionOracleRequest) GetStatus() RequestStatus {
	if x != nil {
		return x.Status
	}
	return RequestStatus_PENDING
}

func (x *ActionOracleRequest) GetCurrentConfirm() uint64 {
	if x != nil {
		return x.CurrentConfirm
	}
	return 0
}

func (x *ActionOracleRequest) GetConfirmers() []string {
	if x != nil {
		return x.Confirmers
	}
	return nil
}

func (x *ActionOracleRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ActionOracleRequest) GetValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidUntil
	}
	return nil
}

func (x *ActionOracleRequest) GetDataHashes() []*DataHash {
	if x != nil {
		return x.DataHashes
	}
	return nil
}

func (x *ActionOracleRequest) GetExpiredHeight() int64 {
	if x != nil {
		return x.ExpiredHeight
	}
	return 0
}

func (x *ActionOracleRequest) GetExecutionErrorMessage() string {
	if x != nil {
		return x.ExecutionErrorMessage
	}
	return ""
}

var File_sixprotocol_nftoracle_action_request_proto protoreflect.FileDescriptor

var file_sixprotocol_nftoracle_action_request_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66,
	0x74, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x69,
	0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x1a, 0x23, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x6e, 0x66, 0x74, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x73,
	0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xac, 0x02, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x66, 0x74, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x66, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x6e, 0x66, 0x74, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90,
	0xdf, 0x1f, 0x01, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20,
	0x0a, 0x0c, 0x6f, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x6f, 0x66, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66,
	0x22, 0xce, 0x05, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x66, 0x74, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x66, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x72,
	0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x66,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x3c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65,
	0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x65, 0x72, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x45, 0x0a, 0x0b, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00,
	0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x12, 0x40, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0xe5, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x66, 0x74, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x42,
	0x12, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x78, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x73, 0x69, 0x78, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x66, 0x74,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xa2, 0x02, 0x03, 0x53, 0x4e, 0x58, 0xaa, 0x02, 0x15, 0x53,
	0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x66, 0x74, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0xca, 0x02, 0x15, 0x53, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x5c, 0x4e, 0x66, 0x74, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xe2, 0x02, 0x21, 0x53,
	0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x4e, 0x66, 0x74, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x16, 0x53, 0x69, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x3a, 0x3a,
	0x4e, 0x66, 0x74, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sixprotocol_nftoracle_action_request_proto_rawDescOnce sync.Once
	file_sixprotocol_nftoracle_action_request_proto_rawDescData = file_sixprotocol_nftoracle_action_request_proto_rawDesc
)

func file_sixprotocol_nftoracle_action_request_proto_rawDescGZIP() []byte {
	file_sixprotocol_nftoracle_action_request_proto_rawDescOnce.Do(func() {
		file_sixprotocol_nftoracle_action_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_sixprotocol_nftoracle_action_request_proto_rawDescData)
	})
	return file_sixprotocol_nftoracle_action_request_proto_rawDescData
}

var file_sixprotocol_nftoracle_action_request_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sixprotocol_nftoracle_action_request_proto_goTypes = []interface{}{
	(*ActionParameter)(nil),       // 0: sixprotocol.nftoracle.ActionParameter
	(*ActionOracleParam)(nil),     // 1: sixprotocol.nftoracle.ActionOracleParam
	(*ActionOracleRequest)(nil),   // 2: sixprotocol.nftoracle.ActionOracleRequest
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(RequestStatus)(0),            // 4: sixprotocol.nftoracle.RequestStatus
	(*DataHash)(nil),              // 5: sixprotocol.nftoracle.DataHash
}
var file_sixprotocol_nftoracle_action_request_proto_depIdxs = []int32{
	0, // 0: sixprotocol.nftoracle.ActionOracleParam.params:type_name -> sixprotocol.nftoracle.ActionParameter
	3, // 1: sixprotocol.nftoracle.ActionOracleParam.expired_at:type_name -> google.protobuf.Timestamp
	0, // 2: sixprotocol.nftoracle.ActionOracleRequest.params:type_name -> sixprotocol.nftoracle.ActionParameter
	4, // 3: sixprotocol.nftoracle.ActionOracleRequest.status:type_name -> sixprotocol.nftoracle.RequestStatus
	3, // 4: sixprotocol.nftoracle.ActionOracleRequest.created_at:type_name -> google.protobuf.Timestamp
	3, // 5: sixprotocol.nftoracle.ActionOracleRequest.valid_until:type_name -> google.protobuf.Timestamp
	5, // 6: sixprotocol.nftoracle.ActionOracleRequest.data_hashes:type_name -> sixprotocol.nftoracle.DataHash
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_sixprotocol_nftoracle_action_request_proto_init() }
func file_sixprotocol_nftoracle_action_request_proto_init() {
	if File_sixprotocol_nftoracle_action_request_proto != nil {
		return
	}
	file_sixprotocol_nftoracle_opensea_proto_init()
	file_sixprotocol_nftoracle_request_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sixprotocol_nftoracle_action_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sixprotocol_nftoracle_action_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionOracleParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sixprotocol_nftoracle_action_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionOracleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sixprotocol_nftoracle_action_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sixprotocol_nftoracle_action_request_proto_goTypes,
		DependencyIndexes: file_sixprotocol_nftoracle_action_request_proto_depIdxs,
		MessageInfos:      file_sixprotocol_nftoracle_action_request_proto_msgTypes,
	}.Build()
	File_sixprotocol_nftoracle_action_request_proto = out.File
	file_sixprotocol_nftoracle_action_request_proto_rawDesc = nil
	file_sixprotocol_nftoracle_action_request_proto_goTypes = nil
	file_sixprotocol_nftoracle_action_request_proto_depIdxs = nil
}
